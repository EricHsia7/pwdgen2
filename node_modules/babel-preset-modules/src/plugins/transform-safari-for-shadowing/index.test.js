import { babel } from '../../../test/_util';
import plugin from '.';

const CONFIG = {
	plugins: [
		plugin
	]
};

describe('transform-safari-for-shadowing', () => {
	it('should ignore unshadowed for declarations', () => {
		expect(babel(`()=>{for(let x of{})x;};`, CONFIG)).toEqual(`()=>{for(let x of{})x;};`);
		expect(babel(`()=>{for(const x in[])x;};`, CONFIG)).toEqual(`()=>{for(const x in[])x;};`);
		expect(babel(`()=>{for(let x=0;;)x;};`, CONFIG)).toEqual(`()=>{for(let x=0;;)x;};`);
		expect(babel(`x=>{for(let y of{})y;};`, CONFIG)).toEqual(`x=>{for(let y of{})y;};`);
		expect(babel(`x=>{for(let y of{}){let x;x;}};`, CONFIG)).toEqual(`x=>{for(let y of{}){let x;x;}};`);
	});

	it('should rename parameter-shadowed declarations within for blocks', () => {
		expect(babel(`x=>{for(let x of{})x;};`, CONFIG)).toEqual(`x=>{for(let _x of{})_x;};`);
		expect(babel(`x=>{for(const x in[])x;};`, CONFIG)).toEqual(`x=>{for(const _x in[])_x;};`);
		expect(babel(`x=>{for(let x=0;;)x;};`, CONFIG)).toEqual(`x=>{for(let _x=0;;)_x;};`);
		expect(babel(`()=>{let x;for(let x of{})x;};`, CONFIG)).toEqual(`()=>{let x;for(let x of{})x;};`);
		expect(babel(`x=>{for(let x of{}){let x;x;}};`, CONFIG)).toEqual(`x=>{for(let _x of{}){let x;x;}};`);
	});
});
