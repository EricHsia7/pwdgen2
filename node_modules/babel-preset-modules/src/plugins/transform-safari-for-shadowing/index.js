/**
 * Safari ~11 (unsure of version) had a bug where variable declarations in a For statement would throw if they shadowed parameter names.
 * This is fixed simply by renaming any declarations in the left/init part of a For* statement so they don't shadow parameters.
 * @see https://bugs.webkit.org/show_bug.cgi?id=171041
 * @example
 *   e => { for (let e of []) e }   // throws
 *   e => { for (let _e of []) _e }   // works
 */

function handle(declaration) {
	if (!declaration.isVariableDeclaration()) return;

	const fn = declaration.getFunctionParent();
	const { name } = declaration.node.declarations[0].id;

	// check if there is a shadowed binding coming from a parameter
	if (fn && fn.scope.hasOwnBinding(name) && fn.scope.getOwnBinding(name).kind === 'param') {
		declaration.scope.rename(name);
	}
}

export default ({ types: t }) => ({
	name: 'transform-safari-for-shadowing',
	visitor: {
		ForXStatement(path) {
			handle(path.get('left'));
		},

		ForStatement(path) {
			handle(path.get('init'));
		}
	}
});
