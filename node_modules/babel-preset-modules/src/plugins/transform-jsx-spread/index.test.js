import { babel } from '../../../test/_util';
import plugin from '.';

const CONFIG = {
	plugins: [
		['@babel/plugin-transform-react-jsx', { pragma: 'h' }],
		plugin
	]
};

describe('transform-jsx-spread', () => {
	it('should replace with object rest spread', () => {
		expect(babel('<div a={1} {...props} />;', CONFIG)).toEqual('h("div",{a:1,...props});');
		expect(babel('<div a={1} {...props} b />;', CONFIG)).toEqual('h("div",{a:1,...props,b:true});');
		expect(babel('<div {...a} {...b} />;', CONFIG)).toEqual('h("div",{...a,...b});');
		expect(babel('<div {...props} b="hi">a</div>;', CONFIG)).toEqual('h("div",{...props,b:"hi"},"a");');
	});

	it('should ignore lone spread', () => {
		expect(babel('<div {...props} />;', CONFIG)).toEqual('h("div",props);');
		expect(babel('<div />;', CONFIG)).toEqual('h("div",null);');
	});

	it('should ignore nested spreads', () => {
		expect(babel('<div {...{...props}} />;', CONFIG)).toEqual('h("div",{...props});');
		expect(babel('<div />;', CONFIG)).toEqual('h("div",null);');
	});
});
