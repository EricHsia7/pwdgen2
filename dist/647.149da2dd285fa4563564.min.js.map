{"version":3,"file":"647.149da2dd285fa4563564.min.js","mappings":"kFAOA,IAAIA,EAAO,EAAQ,KAqBnB,SAASC,IACPC,KAAKC,OAAS,GACdD,KAAKE,SAAU,EAEfF,KAAKG,MAAQ,CAACC,eAAgB,EAAGC,gBAAiB,EACpD,CAQAN,EAAYO,UAAUC,gBACpB,SAA6BC,EAAWC,GACtCT,KAAKC,OAAOS,QAAQF,EAAWC,EACjC,EAOFV,EAAYO,UAAUK,IAAM,SAAyBC,GAtCrD,IAAgCC,EAAUC,EAEpCC,EACAC,EACAC,EACAC,EAL0BL,EAuCHb,KAAKG,MAvCQW,EAuCDF,EArCnCG,EAAQF,EAAST,cACjBY,EAAQF,EAASV,cACjBa,EAAUJ,EAASR,gBACnBa,EAAUJ,EAAST,gBAChBW,EAAQD,GAASC,GAASD,GAASG,GAAWD,GAC9CnB,EAAKqB,oCAAoCN,EAAUC,IAAa,GAiCrEd,KAAKG,MAAQS,EACbZ,KAAKC,OAAOmB,KAAKR,KAEjBZ,KAAKE,SAAU,EACfF,KAAKC,OAAOmB,KAAKR,GAErB,EAWAb,EAAYO,UAAUe,QAAU,WAK9B,OAJKrB,KAAKE,UACRF,KAAKC,OAAOqB,KAAKxB,EAAKqB,qCACtBnB,KAAKE,SAAU,GAEVF,KAAKC,MACd,EAEAsB,EAAQ,EAAcxB,C,cCnDtB,SAASyB,EAAKC,EAAKC,EAAGC,GACpB,IAAIC,EAAOH,EAAIC,GACfD,EAAIC,GAAKD,EAAIE,GACbF,EAAIE,GAAKC,CACX,CA0BA,SAASC,EAAYJ,EAAKK,EAAYC,EAAGC,GAKvC,GAAID,EAAIC,EAAG,CAYT,IACIC,EAAIF,EAAI,EAEZP,EAAKC,GApCiBS,EAiCYH,EAjCPI,EAiCUH,EAhChCI,KAAKC,MAAMH,EAAOE,KAAKE,UAAYH,EAAOD,KAmCzBF,GAStB,IARA,IAAIO,EAAQd,EAAIO,GAQPQ,EAAIT,EAAGS,EAAIR,EAAGQ,IACjBV,EAAWL,EAAIe,GAAID,IAAU,GAE/Bf,EAAKC,EADLQ,GAAK,EACQO,GAIjBhB,EAAKC,EAAKQ,EAAI,EAAGO,GACjB,IAAIC,EAAIR,EAAI,EAIZJ,EAAYJ,EAAKK,EAAYC,EAAGU,EAAI,GACpCZ,EAAYJ,EAAKK,EAAYW,EAAI,EAAGT,EACtC,CA3DF,IAA0BE,EAAKC,CA4D/B,CAUAZ,EAAQ,EAAY,SAAUE,EAAKK,GACjCD,EAAYJ,EAAKK,EAAY,EAAGL,EAAIiB,OAAS,EAC/C,C,gBC1GA,IAAIC,EAAY,EAAQ,KACpB7C,EAAO,EAAQ,KACf8C,EAAW,SACX7C,EAAc,QAUlB,SAAS8C,EAAmBC,GACrBA,IACHA,EAAQ,CAAC,GAEX9C,KAAK+C,MAAQjD,EAAKkD,OAAOF,EAAO,OAAQ,MACxC9C,KAAKiD,YAAcnD,EAAKkD,OAAOF,EAAO,aAAc,MACpD9C,KAAKkD,gBAAkBpD,EAAKkD,OAAOF,EAAO,kBAAkB,GAC5D9C,KAAKmD,SAAW,IAAIP,EACpB5C,KAAKoD,OAAS,IAAIR,EAClB5C,KAAKqD,UAAY,IAAItD,EACrBC,KAAKsD,iBAAmB,IAC1B,CAEAT,EAAmBvC,UAAUiD,SAAW,EAOxCV,EAAmBW,cACjB,SAA0CC,GACxC,IAAIC,EAAaD,EAAmBC,WAChCC,EAAY,IAAId,EAAmB,CACrCe,KAAMH,EAAmBG,KACzBF,WAAYA,IAkCd,OAhCAD,EAAmBI,aAAY,SAAUC,GACvC,IAAIC,EAAa,CACfC,UAAW,CACTC,KAAMH,EAAQ1D,cACd8D,OAAQJ,EAAQzD,kBAIE,MAAlByD,EAAQK,SACVJ,EAAWI,OAASL,EAAQK,OACV,MAAdT,IACFK,EAAWI,OAASrE,EAAKsE,SAASV,EAAYK,EAAWI,SAG3DJ,EAAWM,SAAW,CACpBJ,KAAMH,EAAQQ,aACdJ,OAAQJ,EAAQS,gBAGE,MAAhBT,EAAQU,OACVT,EAAWS,KAAOV,EAAQU,OAI9Bb,EAAUc,WAAWV,EACvB,IACAN,EAAmBiB,QAAQhE,SAAQ,SAAUiE,GAC3C,IAAIC,EAAUnB,EAAmBoB,iBAAiBF,GACnC,MAAXC,GACFjB,EAAUmB,iBAAiBH,EAAYC,EAE3C,IACOjB,CACT,EAYFd,EAAmBvC,UAAUmE,WAC3B,SAAuC3B,GACrC,IAAIkB,EAAYlE,EAAKkD,OAAOF,EAAO,aAC/BuB,EAAWvE,EAAKkD,OAAOF,EAAO,WAAY,MAC1CqB,EAASrE,EAAKkD,OAAOF,EAAO,SAAU,MACtC0B,EAAO1E,EAAKkD,OAAOF,EAAO,OAAQ,MAEjC9C,KAAKkD,iBACRlD,KAAK+E,iBAAiBf,EAAWK,EAAUF,EAAQK,GAGvC,MAAVL,IACFA,EAASa,OAAOb,GACXnE,KAAKmD,SAAS8B,IAAId,IACrBnE,KAAKmD,SAASxC,IAAIwD,IAIV,MAARK,IACFA,EAAOQ,OAAOR,GACTxE,KAAKoD,OAAO6B,IAAIT,IACnBxE,KAAKoD,OAAOzC,IAAI6D,IAIpBxE,KAAKqD,UAAU1C,IAAI,CACjBP,cAAe4D,EAAUC,KACzB5D,gBAAiB2D,EAAUE,OAC3BI,aAA0B,MAAZD,GAAoBA,EAASJ,KAC3CM,eAA4B,MAAZF,GAAoBA,EAASH,OAC7CC,OAAQA,EACRK,KAAMA,GAEV,EAKF3B,EAAmBvC,UAAUwE,iBAC3B,SAA6CI,EAAaC,GACxD,IAAIhB,EAASe,EACW,MAApBlF,KAAKiD,cACPkB,EAASrE,EAAKsE,SAASpE,KAAKiD,YAAakB,IAGrB,MAAlBgB,GAGGnF,KAAKsD,mBACRtD,KAAKsD,iBAAmB8B,OAAOC,OAAO,OAExCrF,KAAKsD,iBAAiBxD,EAAKwF,YAAYnB,IAAWgB,GACzCnF,KAAKsD,0BAGPtD,KAAKsD,iBAAiBxD,EAAKwF,YAAYnB,IACI,IAA9CiB,OAAOG,KAAKvF,KAAKsD,kBAAkBZ,SACrC1C,KAAKsD,iBAAmB,MAG9B,EAkBFT,EAAmBvC,UAAUkF,eAC3B,SAA2C/B,EAAoByB,EAAaO,GAC1E,IAAId,EAAaO,EAEjB,GAAmB,MAAfA,EAAqB,CACvB,GAA+B,MAA3BzB,EAAmBG,KACrB,MAAM,IAAI8B,MACR,iJAIJf,EAAalB,EAAmBG,IAClC,CACA,IAAIF,EAAa1D,KAAKiD,YAEJ,MAAdS,IACFiB,EAAa7E,EAAKsE,SAASV,EAAYiB,IAIzC,IAAIgB,EAAa,IAAI/C,EACjBgD,EAAW,IAAIhD,EAGnB5C,KAAKqD,UAAU9C,iBAAgB,SAAUuD,GACvC,GAAIA,EAAQK,SAAWQ,GAAsC,MAAxBb,EAAQQ,aAAsB,CAEjE,IAAID,EAAWZ,EAAmBoC,oBAAoB,CACpD5B,KAAMH,EAAQQ,aACdJ,OAAQJ,EAAQS,iBAEK,MAAnBF,EAASF,SAEXL,EAAQK,OAASE,EAASF,OACJ,MAAlBsB,IACF3B,EAAQK,OAASrE,EAAKgG,KAAKL,EAAgB3B,EAAQK,SAEnC,MAAdT,IACFI,EAAQK,OAASrE,EAAKsE,SAASV,EAAYI,EAAQK,SAErDL,EAAQQ,aAAeD,EAASJ,KAChCH,EAAQS,eAAiBF,EAASH,OACb,MAAjBG,EAASG,OACXV,EAAQU,KAAOH,EAASG,MAG9B,CAEA,IAAIL,EAASL,EAAQK,OACP,MAAVA,GAAmBwB,EAAWV,IAAId,IACpCwB,EAAWhF,IAAIwD,GAGjB,IAAIK,EAAOV,EAAQU,KACP,MAARA,GAAiBoB,EAASX,IAAIT,IAChCoB,EAASjF,IAAI6D,EAGjB,GAAGxE,MACHA,KAAKmD,SAAWwC,EAChB3F,KAAKoD,OAASwC,EAGdnC,EAAmBiB,QAAQhE,SAAQ,SAAUiE,GAC3C,IAAIC,EAAUnB,EAAmBoB,iBAAiBF,GACnC,MAAXC,IACoB,MAAlBa,IACFd,EAAa7E,EAAKgG,KAAKL,EAAgBd,IAEvB,MAAdjB,IACFiB,EAAa7E,EAAKsE,SAASV,EAAYiB,IAEzC3E,KAAK8E,iBAAiBH,EAAYC,GAEtC,GAAG5E,KACL,EAaF6C,EAAmBvC,UAAUyE,iBAC3B,SAA4CgB,EAAYC,EAAWC,EACvBC,GAC1C,MAAIH,GAAc,SAAUA,GAAc,WAAYA,GAC/CA,EAAW9B,KAAO,GAAK8B,EAAW7B,QAAU,IAC3C8B,GAAcC,GAAYC,MAIzBH,GAAc,SAAUA,GAAc,WAAYA,GAC/CC,GAAa,SAAUA,GAAa,WAAYA,GAChDD,EAAW9B,KAAO,GAAK8B,EAAW7B,QAAU,GAC5C8B,EAAU/B,KAAO,GAAK+B,EAAU9B,QAAU,GAC1C+B,GAKV,MAAM,IAAIP,MAAM,oBAAsBS,KAAKC,UAAU,CACnDpC,UAAW+B,EACX5B,OAAQ8B,EACR5B,SAAU2B,EACVxB,KAAM0B,IAGZ,EAMFrD,EAAmBvC,UAAU+F,mBAC3B,WAcE,IAbA,IAOIC,EACAxC,EACAyC,EACAC,EAVAC,EAA0B,EAC1BC,EAAwB,EACxBC,EAAyB,EACzBC,EAAuB,EACvBC,EAAe,EACfC,EAAiB,EACjBC,EAAS,GAMTC,EAAWhH,KAAKqD,UAAUhC,UACrBY,EAAI,EAAGgF,EAAMD,EAAStE,OAAQT,EAAIgF,EAAKhF,IAAK,CAInD,GAFAqE,EAAO,IADPxC,EAAUkD,EAAS/E,IAGP7B,gBAAkBsG,EAE5B,IADAD,EAA0B,EACnB3C,EAAQ1D,gBAAkBsG,GAC/BJ,GAAQ,IACRI,SAIF,GAAIzE,EAAI,EAAG,CACT,IAAKnC,EAAKqB,oCAAoC2C,EAASkD,EAAS/E,EAAI,IAClE,SAEFqE,GAAQ,GACV,CAGFA,GAAQ3D,EAAUuE,OAAOpD,EAAQzD,gBACJoG,GAC7BA,EAA0B3C,EAAQzD,gBAEZ,MAAlByD,EAAQK,SACVqC,EAAYxG,KAAKmD,SAASgE,QAAQrD,EAAQK,QAC1CmC,GAAQ3D,EAAUuE,OAAOV,EAAYM,GACrCA,EAAiBN,EAGjBF,GAAQ3D,EAAUuE,OAAOpD,EAAQQ,aAAe,EACnBsC,GAC7BA,EAAuB9C,EAAQQ,aAAe,EAE9CgC,GAAQ3D,EAAUuE,OAAOpD,EAAQS,eACJoC,GAC7BA,EAAyB7C,EAAQS,eAEb,MAAhBT,EAAQU,OACV+B,EAAUvG,KAAKoD,OAAO+D,QAAQrD,EAAQU,MACtC8B,GAAQ3D,EAAUuE,OAAOX,EAAUM,GACnCA,EAAeN,IAInBQ,GAAUT,CACZ,CAEA,OAAOS,CACT,EAEFlE,EAAmBvC,UAAU8G,wBAC3B,SAAmDC,EAAUC,GAC3D,OAAOD,EAASE,KAAI,SAAUpD,GAC5B,IAAKnE,KAAKsD,iBACR,OAAO,KAEU,MAAfgE,IACFnD,EAASrE,EAAKsE,SAASkD,EAAanD,IAEtC,IAAIqD,EAAM1H,EAAKwF,YAAYnB,GAC3B,OAAOiB,OAAO9E,UAAUmH,eAAeC,KAAK1H,KAAKsD,iBAAkBkE,GAC/DxH,KAAKsD,iBAAiBkE,GACtB,IACN,GAAGxH,KACL,EAKF6C,EAAmBvC,UAAUqH,OAC3B,WACE,IAAIJ,EAAM,CACRK,QAAS5H,KAAKuD,SACdmB,QAAS1E,KAAKmD,SAAS9B,UACvBwG,MAAO7H,KAAKoD,OAAO/B,UACnB2F,SAAUhH,KAAKqG,sBAYjB,OAVkB,MAAdrG,KAAK+C,QACPwE,EAAI3D,KAAO5D,KAAK+C,OAEM,MAApB/C,KAAKiD,cACPsE,EAAI7D,WAAa1D,KAAKiD,aAEpBjD,KAAKsD,mBACPiE,EAAIO,eAAiB9H,KAAKoH,wBAAwBG,EAAI7C,QAAS6C,EAAI7D,aAG9D6D,CACT,EAKF1E,EAAmBvC,UAAUyH,SAC3B,WACE,OAAO5B,KAAKC,UAAUpG,KAAK2H,SAC7B,EAEFpG,EAAQsB,mBAAqBA,C,gBC5Y7B,IAAIA,EAAqB,0BACrB/C,EAAO,EAAQ,KAIfkI,EAAgB,UAQhBC,EAAe,qBAcnB,SAASC,EAAWC,EAAOC,EAASnC,EAASoC,EAASnC,GACpDlG,KAAKsI,SAAW,GAChBtI,KAAKuI,eAAiB,CAAC,EACvBvI,KAAKiE,KAAgB,MAATkE,EAAgB,KAAOA,EACnCnI,KAAKkE,OAAoB,MAAXkE,EAAkB,KAAOA,EACvCpI,KAAKmE,OAAoB,MAAX8B,EAAkB,KAAOA,EACvCjG,KAAKwE,KAAgB,MAAT0B,EAAgB,KAAOA,EACnClG,KAAKiI,IAAgB,EACN,MAAXI,GAAiBrI,KAAKW,IAAI0H,EAChC,CAUAH,EAAWM,wBACT,SAA4CC,EAAgBhF,EAAoBiF,GAG9E,IAAIC,EAAO,IAAIT,EAMXU,EAAiBH,EAAeI,MAAMb,GACtCc,EAAgB,WAIlB,OAHmBF,EAAeG,SAEpBH,EAAeG,SAAW,GAE1C,EAGIC,EAAoB,EAAGC,EAAsB,EAK7CC,EAAc,KAgElB,OA9DAzF,EAAmBI,aAAY,SAAUC,GACvC,GAAoB,OAAhBoF,EAAsB,CAGxB,KAAIF,EAAoBlF,EAAQ1D,eAMzB,CAIL,IACI+I,GADAC,EAAWR,EAAe,IACVS,OAAO,EAAGvF,EAAQzD,gBACR4I,GAO9B,OANAL,EAAe,GAAKQ,EAASC,OAAOvF,EAAQzD,gBACR4I,GACpCA,EAAsBnF,EAAQzD,gBAC9BiJ,EAAmBJ,EAAaC,QAEhCD,EAAcpF,EAEhB,CAlBEwF,EAAmBJ,EAAaJ,KAChCE,IACAC,EAAsB,CAiB1B,CAIA,KAAOD,EAAoBlF,EAAQ1D,eACjCuI,EAAKhI,IAAImI,KACTE,IAEF,GAAIC,EAAsBnF,EAAQzD,gBAAiB,CACjD,IAAI+I,EAAWR,EAAe,GAC9BD,EAAKhI,IAAIyI,EAASC,OAAO,EAAGvF,EAAQzD,kBACpCuI,EAAe,GAAKQ,EAASC,OAAOvF,EAAQzD,iBAC5C4I,EAAsBnF,EAAQzD,eAChC,CACA6I,EAAcpF,CAChB,GAAG9D,MAEC4I,EAAelG,OAAS,IACtBwG,GAEFI,EAAmBJ,EAAaJ,KAGlCH,EAAKhI,IAAIiI,EAAe9C,KAAK,MAI/BrC,EAAmBiB,QAAQhE,SAAQ,SAAUiE,GAC3C,IAAIC,EAAUnB,EAAmBoB,iBAAiBF,GACnC,MAAXC,IACmB,MAAjB8D,IACF/D,EAAa7E,EAAKgG,KAAK4C,EAAe/D,IAExCgE,EAAK7D,iBAAiBH,EAAYC,GAEtC,IAEO+D,EAEP,SAASW,EAAmBxF,EAASqF,GACnC,GAAgB,OAAZrF,QAAuCyF,IAAnBzF,EAAQK,OAC9BwE,EAAKhI,IAAIwI,OACJ,CACL,IAAIhF,EAASuE,EACT5I,EAAKgG,KAAK4C,EAAe5E,EAAQK,QACjCL,EAAQK,OACZwE,EAAKhI,IAAI,IAAIuH,EAAWpE,EAAQQ,aACRR,EAAQS,eACRJ,EACAgF,EACArF,EAAQU,MAClC,CACF,CACF,EAQF0D,EAAW5H,UAAUK,IAAM,SAAwB6I,GACjD,GAAIC,MAAMC,QAAQF,GAChBA,EAAO9I,SAAQ,SAAUiJ,GACvB3J,KAAKW,IAAIgJ,EACX,GAAG3J,UAEA,KAAIwJ,EAAOvB,IAAmC,iBAAXuB,EAMtC,MAAM,IAAII,UACR,8EAAgFJ,GAN9EA,GACFxJ,KAAKsI,SAASlH,KAAKoI,EAOvB,CACA,OAAOxJ,IACT,EAQAkI,EAAW5H,UAAUuJ,QAAU,SAA4BL,GACzD,GAAIC,MAAMC,QAAQF,GAChB,IAAK,IAAIvH,EAAIuH,EAAO9G,OAAO,EAAGT,GAAK,EAAGA,IACpCjC,KAAK6J,QAAQL,EAAOvH,QAGnB,KAAIuH,EAAOvB,IAAmC,iBAAXuB,EAItC,MAAM,IAAII,UACR,8EAAgFJ,GAJlFxJ,KAAKsI,SAASwB,QAAQN,EAMxB,CACA,OAAOxJ,IACT,EASAkI,EAAW5H,UAAUyJ,KAAO,SAAyBC,GAEnD,IADA,IAAIL,EACK1H,EAAI,EAAGgF,EAAMjH,KAAKsI,SAAS5F,OAAQT,EAAIgF,EAAKhF,KACnD0H,EAAQ3J,KAAKsI,SAASrG,IACZgG,GACR0B,EAAMI,KAAKC,GAGG,KAAVL,GACFK,EAAIL,EAAO,CAAExF,OAAQnE,KAAKmE,OACbF,KAAMjE,KAAKiE,KACXC,OAAQlE,KAAKkE,OACbM,KAAMxE,KAAKwE,MAIhC,EAQA0D,EAAW5H,UAAUwF,KAAO,SAAyBmE,GACnD,IAAIC,EACAjI,EACAgF,EAAMjH,KAAKsI,SAAS5F,OACxB,GAAIuE,EAAM,EAAG,CAEX,IADAiD,EAAc,GACTjI,EAAI,EAAGA,EAAIgF,EAAI,EAAGhF,IACrBiI,EAAY9I,KAAKpB,KAAKsI,SAASrG,IAC/BiI,EAAY9I,KAAK6I,GAEnBC,EAAY9I,KAAKpB,KAAKsI,SAASrG,IAC/BjC,KAAKsI,SAAW4B,CAClB,CACA,OAAOlK,IACT,EASAkI,EAAW5H,UAAU6J,aAAe,SAAiCC,EAAUC,GAC7E,IAAIC,EAAYtK,KAAKsI,SAAStI,KAAKsI,SAAS5F,OAAS,GAUrD,OATI4H,EAAUrC,GACZqC,EAAUH,aAAaC,EAAUC,GAEL,iBAAdC,EACdtK,KAAKsI,SAAStI,KAAKsI,SAAS5F,OAAS,GAAK4H,EAAUC,QAAQH,EAAUC,GAGtErK,KAAKsI,SAASlH,KAAK,GAAGmJ,QAAQH,EAAUC,IAEnCrK,IACT,EASAkI,EAAW5H,UAAUwE,iBACnB,SAAqCI,EAAaC,GAChDnF,KAAKuI,eAAezI,EAAKwF,YAAYJ,IAAgBC,CACvD,EAQF+C,EAAW5H,UAAUkK,mBACnB,SAAuCR,GACrC,IAAK,IAAI/H,EAAI,EAAGgF,EAAMjH,KAAKsI,SAAS5F,OAAQT,EAAIgF,EAAKhF,IAC/CjC,KAAKsI,SAASrG,GAAGgG,IACnBjI,KAAKsI,SAASrG,GAAGuI,mBAAmBR,GAIxC,IAAItF,EAAUU,OAAOG,KAAKvF,KAAKuI,gBAC/B,IAAStG,EAAI,EAAGgF,EAAMvC,EAAQhC,OAAQT,EAAIgF,EAAKhF,IAC7C+H,EAAIlK,EAAK2K,cAAc/F,EAAQzC,IAAKjC,KAAKuI,eAAe7D,EAAQzC,IAEpE,EAMFiG,EAAW5H,UAAUyH,SAAW,WAC9B,IAAI2C,EAAM,GAIV,OAHA1K,KAAK+J,MAAK,SAAUJ,GAClBe,GAAOf,CACT,IACOe,CACT,EAMAxC,EAAW5H,UAAUqK,sBAAwB,SAA0C7H,GACrF,IAAIkB,EAAY,CACdmF,KAAM,GACNlF,KAAM,EACNC,OAAQ,GAENqD,EAAM,IAAI1E,EAAmBC,GAC7B8H,GAAsB,EACtBC,EAAqB,KACrBC,EAAmB,KACnBC,EAAqB,KACrBC,EAAmB,KAqEvB,OApEAhL,KAAK+J,MAAK,SAAUJ,EAAOtF,GACzBL,EAAUmF,MAAQQ,EACM,OAApBtF,EAASF,QACY,OAAlBE,EAASJ,MACW,OAApBI,EAASH,QACX2G,IAAuBxG,EAASF,QAC7B2G,IAAqBzG,EAASJ,MAC9B8G,IAAuB1G,EAASH,QAChC8G,IAAqB3G,EAASG,MAClC+C,EAAI9C,WAAW,CACbN,OAAQE,EAASF,OACjBE,SAAU,CACRJ,KAAMI,EAASJ,KACfC,OAAQG,EAASH,QAEnBF,UAAW,CACTC,KAAMD,EAAUC,KAChBC,OAAQF,EAAUE,QAEpBM,KAAMH,EAASG,OAGnBqG,EAAqBxG,EAASF,OAC9B2G,EAAmBzG,EAASJ,KAC5B8G,EAAqB1G,EAASH,OAC9B8G,EAAmB3G,EAASG,KAC5BoG,GAAsB,GACbA,IACTrD,EAAI9C,WAAW,CACbT,UAAW,CACTC,KAAMD,EAAUC,KAChBC,OAAQF,EAAUE,UAGtB2G,EAAqB,KACrBD,GAAsB,GAExB,IAAK,IAAIK,EAAM,EAAGvI,EAASiH,EAAMjH,OAAQuI,EAAMvI,EAAQuI,IArWxC,KAsWTtB,EAAMuB,WAAWD,IACnBjH,EAAUC,OACVD,EAAUE,OAAS,EAEf+G,EAAM,IAAMvI,GACdmI,EAAqB,KACrBD,GAAsB,GACbA,GACTrD,EAAI9C,WAAW,CACbN,OAAQE,EAASF,OACjBE,SAAU,CACRJ,KAAMI,EAASJ,KACfC,OAAQG,EAASH,QAEnBF,UAAW,CACTC,KAAMD,EAAUC,KAChBC,OAAQF,EAAUE,QAEpBM,KAAMH,EAASG,QAInBR,EAAUE,QAGhB,IACAlE,KAAKwK,oBAAmB,SAAU7F,EAAYwG,GAC5C5D,EAAIzC,iBAAiBH,EAAYwG,EACnC,IAEO,CAAEhC,KAAMnF,EAAUmF,KAAM5B,IAAKA,EACtC,EAEAhG,EAAQ2G,WAAaA,C,cC5XrB3G,EAAQyB,OATR,SAAgBF,EAAOoD,EAAOkF,GAC5B,GAAIlF,KAASpD,EACX,OAAOA,EAAMoD,GACR,GAAyB,IAArBmF,UAAU3I,OACnB,OAAO0I,EAEP,MAAM,IAAI1F,MAAM,IAAMQ,EAAQ,4BAElC,EAGA,IAAIoF,EAAY,iEACZC,EAAgB,gBAEpB,SAASC,EAASC,GAChB,IAAIC,EAAQD,EAAKC,MAAMJ,GACvB,OAAKI,EAGE,CACLC,OAAQD,EAAM,GACdE,KAAMF,EAAM,GACZG,KAAMH,EAAM,GACZI,KAAMJ,EAAM,GACZK,KAAML,EAAM,IAPL,IASX,CAGA,SAASM,EAAYC,GACnB,IAAIC,EAAM,GAiBV,OAhBID,EAAWN,SACbO,GAAOD,EAAWN,OAAS,KAE7BO,GAAO,KACHD,EAAWL,OACbM,GAAOD,EAAWL,KAAO,KAEvBK,EAAWJ,OACbK,GAAOD,EAAWJ,MAEhBI,EAAWH,OACbI,GAAO,IAAMD,EAAWH,MAEtBG,EAAWF,OACbG,GAAOD,EAAWF,MAEbG,CACT,CAcA,SAASC,EAAUC,GACjB,IAAIL,EAAOK,EACPF,EAAMV,EAASY,GACnB,GAAIF,EAAK,CACP,IAAKA,EAAIH,KACP,OAAOK,EAETL,EAAOG,EAAIH,IACb,CAIA,IAHA,IAGSM,EAHLC,EAAa/K,EAAQ+K,WAAWP,GAEhCQ,EAAQR,EAAKlD,MAAM,OACR2D,EAAK,EAAGvK,EAAIsK,EAAM7J,OAAS,EAAGT,GAAK,EAAGA,IAEtC,OADboK,EAAOE,EAAMtK,IAEXsK,EAAME,OAAOxK,EAAG,GACE,OAAToK,EACTG,IACSA,EAAK,IACD,KAATH,GAIFE,EAAME,OAAOxK,EAAI,EAAGuK,GACpBA,EAAK,IAELD,EAAME,OAAOxK,EAAG,GAChBuK,MAUN,MAJa,MAFbT,EAAOQ,EAAMzG,KAAK,QAGhBiG,EAAOO,EAAa,IAAM,KAGxBJ,GACFA,EAAIH,KAAOA,EACJC,EAAYE,IAEdH,CACT,CA7EAxK,EAAQiK,SAAWA,EAsBnBjK,EAAQyK,YAAcA,EAwDtBzK,EAAQ4K,UAAYA,EA2DpB5K,EAAQuE,KAzCR,SAAc4G,EAAON,GACL,KAAVM,IACFA,EAAQ,KAEI,KAAVN,IACFA,EAAQ,KAEV,IAAIO,EAAWnB,EAASY,GACpBQ,EAAWpB,EAASkB,GAMxB,GALIE,IACFF,EAAQE,EAASb,MAAQ,KAIvBY,IAAaA,EAAShB,OAIxB,OAHIiB,IACFD,EAAShB,OAASiB,EAASjB,QAEtBK,EAAYW,GAGrB,GAAIA,GAAYP,EAAMV,MAAMH,GAC1B,OAAOa,EAIT,GAAIQ,IAAaA,EAASf,OAASe,EAASb,KAE1C,OADAa,EAASf,KAAOO,EACTJ,EAAYY,GAGrB,IAAIC,EAA6B,MAApBT,EAAMU,OAAO,GACtBV,EACAD,EAAUO,EAAMnC,QAAQ,OAAQ,IAAM,IAAM6B,GAEhD,OAAIQ,GACFA,EAASb,KAAOc,EACTb,EAAYY,IAEdC,CACT,EAGAtL,EAAQ+K,WAAa,SAAUF,GAC7B,MAA2B,MAApBA,EAAMU,OAAO,MAAgBV,EAAMV,MAAMJ,EAClD,EAwCA/J,EAAQ6C,SAhCR,SAAkBsI,EAAON,GACT,KAAVM,IACFA,EAAQ,KAGVA,EAAQA,EAAMnC,QAAQ,MAAO,IAO7B,IADA,IAAIwC,EAAQ,EAC0B,IAA/BX,EAAMjF,QAAQuF,EAAQ,MAAY,CACvC,IAAIM,EAAQN,EAAMO,YAAY,KAC9B,GAAID,EAAQ,EACV,OAAOZ,EAOT,IADAM,EAAQA,EAAMQ,MAAM,EAAGF,IACbtB,MAAM,qBACd,OAAOU,IAGPW,CACJ,CAGA,OAAOtD,MAAMsD,EAAQ,GAAGjH,KAAK,OAASsG,EAAM/C,OAAOqD,EAAMhK,OAAS,EACpE,EAGA,IAAIyK,IAEO,cADC/H,OAAOC,OAAO,OAI1B,SAAS+H,EAAUC,GACjB,OAAOA,CACT,CA6BA,SAASC,EAAcD,GACrB,IAAKA,EACH,OAAO,EAGT,IAAI3K,EAAS2K,EAAE3K,OAEf,GAAIA,EAAS,EACX,OAAO,EAGT,GAAiC,KAA7B2K,EAAEnC,WAAWxI,EAAS,IACO,KAA7B2K,EAAEnC,WAAWxI,EAAS,IACO,MAA7B2K,EAAEnC,WAAWxI,EAAS,IACO,MAA7B2K,EAAEnC,WAAWxI,EAAS,IACO,MAA7B2K,EAAEnC,WAAWxI,EAAS,IACO,MAA7B2K,EAAEnC,WAAWxI,EAAS,IACO,MAA7B2K,EAAEnC,WAAWxI,EAAS,IACO,KAA7B2K,EAAEnC,WAAWxI,EAAS,IACO,KAA7B2K,EAAEnC,WAAWxI,EAAS,GACxB,OAAO,EAGT,IAAK,IAAIT,EAAIS,EAAS,GAAIT,GAAK,EAAGA,IAChC,GAAwB,KAApBoL,EAAEnC,WAAWjJ,GACf,OAAO,EAIX,OAAO,CACT,CA+EA,SAASsL,EAAOC,EAAOC,GACrB,OAAID,IAAUC,EACL,EAGLD,EAAQC,EACH,GAGD,CACV,CAlIAlM,EAAQ+D,YAAc6H,EAAoBC,EAP1C,SAAqBM,GACnB,OAAIJ,EAAcI,GACT,IAAMA,EAGRA,CACT,EAUAnM,EAAQkJ,cAAgB0C,EAAoBC,EAP5C,SAAuBM,GACrB,OAAIJ,EAAcI,GACTA,EAAKR,MAAM,GAGbQ,CACT,EAuEAnM,EAAQoM,2BA5BR,SAAoC9M,EAAUC,EAAU8M,GACtD,IAAIC,EAAMhN,EAASsD,OAASrD,EAASqD,OACrC,OAAY,IAAR0J,GAKQ,KADZA,EAAMhN,EAASyD,aAAexD,EAASwD,eAM3B,KADZuJ,EAAMhN,EAAS0D,eAAiBzD,EAASyD,iBACxBqJ,GAKL,KADZC,EAAMhN,EAASR,gBAAkBS,EAAST,kBAM9B,KADZwN,EAAMhN,EAAST,cAAgBU,EAASV,eAlB/ByN,EAuBFhN,EAAS2D,KAAO1D,EAAS0D,IAClC,EAwCAjD,EAAQuM,oCA5BR,SAA6CjN,EAAUC,EAAUiN,GAC/D,IAAIF,EAAMhN,EAAST,cAAgBU,EAASV,cAC5C,OAAY,IAARyN,GAKQ,KADZA,EAAMhN,EAASR,gBAAkBS,EAAST,kBACzB0N,GAKL,KADZF,EAAMhN,EAASsD,OAASrD,EAASqD,SAMrB,KADZ0J,EAAMhN,EAASyD,aAAexD,EAASwD,eAM3B,KADZuJ,EAAMhN,EAAS0D,eAAiBzD,EAASyD,gBAlBhCsJ,EAuBFhN,EAAS2D,KAAO1D,EAAS0D,IAClC,EA+CAjD,EAAQJ,oCA5BR,SAA6CN,EAAUC,GACrD,IAAI+M,EAAMhN,EAAST,cAAgBU,EAASV,cAC5C,OAAY,IAARyN,GAKQ,KADZA,EAAMhN,EAASR,gBAAkBS,EAAST,kBAM9B,KADZwN,EAAMN,EAAO1M,EAASsD,OAAQrD,EAASqD,UAM3B,KADZ0J,EAAMhN,EAASyD,aAAexD,EAASwD,eAM3B,KADZuJ,EAAMhN,EAAS0D,eAAiBzD,EAASyD,gBAlBhCsJ,EAuBFN,EAAO1M,EAAS2D,KAAM1D,EAAS0D,KACxC,C,gBC1ZAjD,EAAQsB,mBAAqB,EAA7B,wBACAtB,EAAQyM,kBAAoB,EAA5B,uBACAzM,EAAQ2G,WAAa,EAArB,e","sources":["webpack://pwdgen2/./node_modules/stacktrace-gps/node_modules/source-map/lib/mapping-list.js","webpack://pwdgen2/./node_modules/stacktrace-gps/node_modules/source-map/lib/quick-sort.js","webpack://pwdgen2/./node_modules/stacktrace-gps/node_modules/source-map/lib/source-map-generator.js","webpack://pwdgen2/./node_modules/stacktrace-gps/node_modules/source-map/lib/source-node.js","webpack://pwdgen2/./node_modules/stacktrace-gps/node_modules/source-map/lib/util.js","webpack://pwdgen2/./node_modules/stacktrace-gps/node_modules/source-map/source-map.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are removed from this array, by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var shiftNextLine = function() {\n      var lineContents = remainingLines.shift();\n      // The last line of a file might not have a newline.\n      var newLine = remainingLines.shift() || \"\";\n      return lineContents + newLine;\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[0];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[0];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLines.length > 0) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n"],"names":["util","MappingList","this","_array","_sorted","_last","generatedLine","generatedColumn","prototype","unsortedForEach","aCallback","aThisArg","forEach","add","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","push","toArray","sort","exports","swap","ary","x","y","temp","doQuickSort","comparator","p","r","i","low","high","Math","round","random","pivot","j","q","length","base64VLQ","ArraySet","SourceMapGenerator","aArgs","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","_version","fromSourceMap","aSourceMapConsumer","sourceRoot","generator","file","eachMapping","mapping","newMapping","generated","line","column","source","relative","original","originalLine","originalColumn","name","addMapping","sources","sourceFile","content","sourceContentFor","setSourceContent","_validateMapping","String","has","aSourceFile","aSourceContent","Object","create","toSetString","keys","applySourceMap","aSourceMapPath","Error","newSources","newNames","originalPositionFor","join","aGenerated","aOriginal","aSource","aName","JSON","stringify","_serializeMappings","next","nameIdx","sourceIdx","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","mappings","len","encode","indexOf","_generateSourcesContent","aSources","aSourceRoot","map","key","hasOwnProperty","call","toJSON","version","names","sourcesContent","toString","REGEX_NEWLINE","isSourceNode","SourceNode","aLine","aColumn","aChunks","children","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","node","remainingLines","split","shiftNextLine","shift","lastGeneratedLine","lastGeneratedColumn","lastMapping","code","nextLine","substr","addMappingWithCode","undefined","aChunk","Array","isArray","chunk","TypeError","prepend","unshift","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","replace","walkSourceContents","fromSetString","str","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","idx","charCodeAt","sourceContent","aDefaultValue","arguments","urlRegexp","dataUrlRegexp","urlParse","aUrl","match","scheme","auth","host","port","path","urlGenerate","aParsedUrl","url","normalize","aPath","part","isAbsolute","parts","up","splice","aRoot","aPathUrl","aRootUrl","joined","charAt","level","index","lastIndexOf","slice","supportsNullProto","identity","s","isProtoString","strcmp","aStr1","aStr2","aStr","compareByOriginalPositions","onlyCompareOriginal","cmp","compareByGeneratedPositionsDeflated","onlyCompareGenerated","SourceMapConsumer"],"sourceRoot":""}