{"version":3,"file":"main-931168cd.ae6bfb567c58aa32adc0.min.js","mappings":"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","sources":["webpack://pwdgen2/./src/core/check-password.ts","webpack://pwdgen2/./src/core/fine-grained-password.ts"],"sourcesContent":["// Import required functions\nimport words_list from './words-list';\nimport { LS } from './storage';\n\nexport function checkCommonWordPatterns(string): number {\n  if (!words_list.loaded) {\n    words_list.getWordsList();\n    return 0;\n  }\n  string = string.toLowerCase();\n  var len = string.length;\n\n  var matched = [];\n  for (var i = 0; i < len; i++) {\n    // Narrow down the range by prefixes and pre-distributed index.\n    if (words_list.c.hasOwnProperty(string.substring(i, i + 3))) {\n      var arr = words_list.c[string.substring(i, i + 3)].slice();\n      var arr_len = arr.length;\n      // Check if the string includes a word in the range.\n      for (var r = 0; r < arr_len; r++) {\n        if (string.indexOf(arr[r].trim()) !== -1 && matched.indexOf(arr[r]) < 0) {\n          matched.push(arr[r]);\n        }\n      }\n    }\n  }\n  // Sort the matched list by length from long to short to avoid counting subsets in a series of a root word repeatedly.\n  // For example, \"suitable\" includes \"suit\" and \"able\".\n  matched.sort(function (a, b) {\n    return b.length - a.length;\n  });\n  var matched_len = matched.length;\n  for (var g = 0; g < matched_len; g++) {\n    string = string.replaceAll(matched[g].trim(), '');\n  }\n  // Calculate the length proportion of the filtered string and the original string.\n  // Return a number in the range from 0 to 1.\n  return string.length / len;\n}\n\nexport function checkPassword(string, cache, id) {\n  var getPoints = function (string) {\n    // Use the stats to get a function\n    // 1. Generate plenty of strong passwords using the generator.\n    // 2. Use \"moved character length/distance between the original string and sorting by the unicode version\" to calculate the points.\n    // 3. Create a chart to calculate the count.\n    // 4. Use the count as the weight of the final points.\n    // 5. Create a function (randomnessX) that loads up various relationships between original points and final points from 0 to 100.\n    const randomnessX = function (x) {\n      x = Math.min(Math.max(0, x), 128)\n      return 0.0002935722989012925 * Math.pow(x ,3) - 0.07465043014846659 * Math.pow(x ,2) + 4.948575897686438 * x\n    };\n    // Use the stats to get a formula (length).\n    var length = -42.7 + 29.7 * Math.log(string.length);\n    var arr = string.split('');\n    var arr_len = arr.length;\n    var randomness = 0;\n    var n_arr = [];\n    var json = {};\n    var t = [];\n    for (var w = 0; w < arr_len; w++) {\n      // Create an array to log their content, index, and unicode.\n      n_arr.push({ c: arr[w], i: w, u: String(arr[w]).charCodeAt(0) });\n      // Create an object to calculate the proportion of same/used characters in the password → analyze the ingredients of the password.\n      json['u_' + String(arr[w]).charCodeAt(0)] = json.hasOwnProperty('u_' + String(arr[w]).charCodeAt(0)) ? json['u_' + String(arr[w]).charCodeAt(0)] + 1 : 1;\n    }\n    // Sort the array by unicode.\n    n_arr.sort(function (a, b) {\n      return a.u - b.u;\n    });\n    // Calculate the total moving steps/distance of characters.\n    for (var w = 0; w < arr_len; w++) {\n      randomness += Math.abs(w - n_arr[w].i);\n    }\n    // Convert total distance to points in the range from 0 to 100 and use the function to calculate the final points.\n    randomness = randomnessX((randomness / n_arr.length / (string.length / 2)) * 100);\n\n    var repeat = 0;\n    var repeat_len = 0;\n    // Calculate the proportion of same/used characters and length.\n    for (var w in json) {\n      repeat += json[w];\n      repeat_len += 1;\n    }\n    // Calculate the final points in the range from 0 to 100.\n    repeat = (1 - repeat / repeat_len / string.length) * 100;\n    // Calculate the proportion of types of characters.\n    t.push(string.match(/[A-Z]*/gm).join('').length);\n    t.push(string.match(/[a-z]*/gm).join('').length);\n    t.push(string.match(/[0-9]*/gm).join('').length);\n    t.push(string.length - t[0] - t[1] - t[2]);\n\n    var t_avg = string.length / 4;\n    var t_s = 0;\n    for (var w = 0; w < 4; w++) {\n      t_s += Math.pow(t[w] - t_avg, 2);\n    }\n    // Calculate the standard deviation to get the degrees of evening distribution/degrees of richness in type.\n    const ty = (1 - Math.min(Math.max(Math.sqrt(t_s / 4) / t_avg, 0), 1)) * 100;\n\n    var commonWords = checkCommonWordPatterns(string) * 100;\n\n    // Combine the indicators with weights into single points.\n    return [\n      Math.min(Math.max(Math.floor((length * 3 + randomness * 1.7 + repeat * 2 + ty * 2 + commonWords * 2) / 10.7), 0), 100),\n      Math.floor(length),\n      Math.floor(randomness),\n      Math.floor(repeat),\n      Math.floor(ty),\n      Math.floor(commonWords),\n      t[0],\n      t[1],\n      t[2],\n      t[3]\n    ];\n  };\n  // Give colors and phrases depending on the points/levels.\n  var judgePoints = function (points) {\n    var phrase = '';\n    var r,\n      g,\n      b = 0;\n    if (points >= 85) {\n      phrase = 'strong';\n      r = 52;\n      g = 199;\n      b = 89;\n    }\n    if (points >= 60 && points < 85) {\n      phrase = 'average';\n      r = 242;\n      g = 190;\n      b = 0;\n    }\n    if (points >= 45 && points < 60) {\n      phrase = 'fragile';\n      r = 255;\n      g = 149;\n      b = 0;\n    }\n    if (points < 45) {\n      phrase = 'unsafe';\n      r = 255;\n      g = 59;\n      b = 48;\n    }\n    return [phrase, r, g, b];\n  };\n\n  var getReport = function (length_points, randomness_points, repeat_points, complexity_points, uniqueness_points, n1, n2, n3, n4) {\n    // Give suggestions depending on the points of indicators.\n    var points_summary = 5;\n    // Initialize a set to store used instructions.\n    var used_instructions = new Set();\n    // Length Instructions\n    if (length_points <= 25 && !used_instructions.has('length_short')) {\n      var Length_Instructions = 'The length of this password is too short. Suggest you make it long enough.';\n      used_instructions.add('length_short');\n    } else if (length_points >= 26 && length_points <= 50 && !used_instructions.has('length_not_long')) {\n      var Length_Instructions = \"The length of this password isn't long enough. Suggest you make it longer.\";\n      used_instructions.add('length_not_long');\n    } else if (length_points >= 51 && length_points <= 75 && !used_instructions.has('length_average')) {\n      var Length_Instructions = 'The length of this password is average. Recommend you make it longer.';\n      used_instructions.add('length_average');\n    } else if (length_points >= 76 && !used_instructions.has('length_long_enough')) {\n      var Length_Instructions = 'The length of this password is long enough, but please keep awareness of the security of your accounts.';\n      used_instructions.add('length_long_enough');\n      points_summary -= 1;\n    }\n\n    // Randomness Instructions\n    if (randomness_points <= 25 && !used_instructions.has('randomness_neat')) {\n      var Randomness_Instructions = \"The arrangement of characters in this password is too neat, so the password isn't random. Suggest you rearrange the characters.\";\n      used_instructions.add('randomness_neat');\n    } else if (randomness_points >= 26 && randomness_points <= 50 && !used_instructions.has('randomness_not_messy')) {\n      var Randomness_Instructions = \"The arrangement of characters in this password isn't messy enough, so the password isn't random. Suggest you rearrange the characters.\";\n      used_instructions.add('randomness_not_messy');\n    } else if (randomness_points >= 51 && randomness_points <= 75 && !used_instructions.has('randomness_average')) {\n      var Randomness_Instructions = 'The arrangement of characters in this password is randomly distributed on average. Recommend you rearrange the characters.';\n      used_instructions.add('randomness_average');\n    } else if (randomness_points >= 76 && !used_instructions.has('randomness_random')) {\n      var Randomness_Instructions = 'The arrangement of characters in this password is entirely random, but please keep awareness of the security of your accounts.';\n      used_instructions.add('randomness_random');\n      points_summary -= 1;\n    }\n\n    // Repeat Instructions\n    if (repeat_points <= 25 && !used_instructions.has('repeat_entirely')) {\n      var Repeat_Instructions = 'In this password, the characters are entirely repeated, which can pose a danger to your account. Suggest you regenerate a new one.';\n      used_instructions.add('repeat_entirely');\n    } else if (repeat_points >= 26 && repeat_points <= 50 && !used_instructions.has('repeat_repeated')) {\n      var Repeat_Instructions = 'In this password, the characters are repeated, which might cause potential dangers to your account. Suggest you regenerate a new one.';\n      used_instructions.add('repeat_repeated');\n    } else if (repeat_points >= 51 && repeat_points <= 75 && !used_instructions.has('repeat_slightly')) {\n      var Repeat_Instructions = 'In this password, the characters are slightly repeated, which is not a strict problem, but still suggest you regenerate a new one.';\n      used_instructions.add('repeat_slightly');\n    } else if (repeat_points >= 76 && !used_instructions.has('repeat_hardly')) {\n      var Repeat_Instructions = 'In this password, the characters are hardly repeated, but please keep awareness of the security of your accounts.';\n      used_instructions.add('repeat_hardly');\n      points_summary -= 1;\n    }\n\n    // Complexity Instructions\n    if (complexity_points <= 25 && !used_instructions.has('complexity_not_complex')) {\n      var Complexity_Instructions = `This password consists of ${n1} uppercases, ${n2} lowercases, ${n3} digits, and ${n4} other types of characters. The types of characters in this password aren't complex and rich enough. Suggest you regenerate a new password that includes all the types of characters.`;\n      used_instructions.add('complexity_not_complex');\n    } else if (complexity_points >= 26 && complexity_points <= 50 && !used_instructions.has('complexity_not_complex_enough')) {\n      var Complexity_Instructions = `This password consists of ${n1} uppercases, ${n2} lowercases, ${n3} digits, and ${n4} types of other characters. The types of characters in this password aren't complex and rich enough. Suggest you regenerate a new password that includes all the types of characters.`;\n      used_instructions.add('complexity_not_complex_enough');\n    } else if (complexity_points >= 51 && complexity_points <= 75 && !used_instructions.has('complexity_not_complex_enough_2')) {\n      var Complexity_Instructions = `This password consists of ${n1} uppercases, ${n2} lowercases, ${n3} digits, and ${n4} other types of characters. The types of characters in this password aren't complex and rich enough. Recommend you regenerate a new password that includes all the types of characters.`;\n      used_instructions.add('complexity_not_complex_enough_2');\n    } else if (complexity_points >= 76 && !used_instructions.has('complexity_complex')) {\n      var Complexity_Instructions = `This password consists of ${n1} uppercases, ${n2} lowercases, ${n3} digits, and ${n4} other types of characters. The types of characters in this password are complex and rich. But please keep awareness of the security of your accounts.`;\n      used_instructions.add('complexity_complex');\n      points_summary -= 1;\n    }\n    // Uniqueness Instructions\n    if (uniqueness_points <= 25 && !used_instructions.has('uniqueness_not_unique')) {\n      var Uniqueness_Instructions = `This password includes many common words. Suggest you remove the words from this password to make it more secure.`;\n      used_instructions.add('complexity_not_complex');\n    } else if (uniqueness_points >= 26 && uniqueness_points <= 50 && !used_instructions.has('uniqueness_not_unique_enough')) {\n      var Uniqueness_Instructions = `This password includes some common words. Suggest you remove the words from this password to make it more secure.`;\n      used_instructions.add('complexity_not_complex_enough');\n    } else if (uniqueness_points >= 51 && uniqueness_points <= 99 && !used_instructions.has('uniqueness_not_unique_enough_2')) {\n      var Uniqueness_Instructions = `This password includes common words. Suggest you remove the words from this password to make it more secure.`;\n      used_instructions.add('complexity_not_complex_enough_2');\n    } else if (uniqueness_points >= 100 && !used_instructions.has('uniqueness_unique')) {\n      var Uniqueness_Instructions = `This password doesn't include common words collected in our list. But please keep awareness of the security of your accounts.`;\n      used_instructions.add('complexity_complex');\n      points_summary -= 1;\n    }\n\n    if (points_summary === 0) {\n      points_summary = 'no';\n    }\n\n    var report = `According to the points, this password has ${points_summary} problem${points_summary > 1 ? 's' : ''}.\nAll you have to do is follow the instructions:\n1. ${Length_Instructions}\n2. ${Randomness_Instructions}\n3. ${Repeat_Instructions}\n4. ${Complexity_Instructions}\n5. ${Uniqueness_Instructions}`;\n\n    return report;\n  };\n  // Use cache to avoid running the report repeatedly and cause performance problems.\n  if (cache) {\n    var LS_key = `pwdgen2_saved_b_${id}`;\n    var LS_cache_key = `pwdgen2_check_cache_b_${id}`;\n    var nowtime = new Date().getTime();\n    if (LS.hasOwnProperty(LS_cache_key)) {\n      var cached_result_points = parseInt(String(LS.getItem(LS_cache_key)).split(':')[1]);\n      var cached_result_time_stamp = parseInt(String(LS.getItem(LS_cache_key)).split(':')[0]);\n      var ju = judgePoints(cached_result_points);\n      if (nowtime - cached_result_time_stamp < 43200000) {\n        return { points: cached_result_points, phrase: ju[0], color: { r: ju[1], g: ju[2], b: ju[3] }, details: null };\n      } else {\n        LS.removeItem(LS_cache_key);\n      }\n    }\n  }\n  var points = getPoints(string);\n  var ju = judgePoints(points[0]);\n  var ju_length = judgePoints(points[1]);\n  var ju_randomness = judgePoints(points[2]);\n  var ju_repeat = judgePoints(points[3]);\n  var ju_complexity = judgePoints(points[4]);\n  var ju_uniqueness = judgePoints(points[5]);\n  if (cache) {\n    LS.setItem(LS_cache_key, nowtime + ':' + points[0]);\n  }\n  return {\n    points: points[0],\n    phrase: ju[0],\n    color: {\n      r: ju[1],\n      g: ju[2],\n      b: ju[3]\n    },\n    details: {\n      len: {\n        points: points[1],\n        color: { r: ju_length[1], g: ju_length[2], b: ju_length[3] }\n      },\n      randomness: {\n        points: points[2],\n        color: {\n          r: ju_randomness[1],\n          g: ju_randomness[2],\n          b: ju_randomness[3]\n        }\n      },\n      repeat: {\n        points: points[3],\n        color: {\n          r: ju_repeat[1],\n          g: ju_repeat[2],\n          b: ju_repeat[3]\n        }\n      },\n      complexity: {\n        points: points[4],\n        color: {\n          r: ju_complexity[1],\n          g: ju_complexity[2],\n          b: ju_complexity[3]\n        }\n      },\n      uniqueness: {\n        points: points[5],\n        color: {\n          r: ju_uniqueness[1],\n          g: ju_uniqueness[2],\n          b: ju_uniqueness[3]\n        }\n      },\n      report: getReport(points[1], points[2], points[3], points[4], points[5], points[6], points[7], points[8], points[9])\n    }\n  };\n}\n","// Import required functions\nimport { LS, searchItemsbyname } from './storage';\nimport utilities from './utilities';\nvar _ = {};\n_.cloneDeep = require('lodash/cloneDeep');\n\nconst pwd_pattern_default: object[] = [\n  {\n    default_pattern: true,\n    pattern_name: 'Strong',\n    pattern_icon: 'key',\n    id: '_strong',\n    pattern: [\n      {\n        type: 'group',\n        group: [\n          {\n            type: 'regex',\n            regex: '/[A-Z]/g',\n            quantity: 32,\n            repeat: true\n          },\n          {\n            type: 'regex',\n            regex: '/[a-z]/g',\n            quantity: 32,\n            repeat: true\n          },\n          {\n            type: 'regex',\n            regex: '/[0-9]/g',\n            quantity: 32,\n            repeat: true\n          },\n          {\n            type: 'list',\n            list: ['-', '!', '$', '%', '^', '&', '*', '(', ')', '_', '+', '|', '~', '=', '`', '{', '}', '\\\\', '[', ']', ':', ',', ';', \"'\", '<', '>', '?', ',', '.', '/'],\n            quantity: 32,\n            repeat: true\n          }\n        ],\n        actions: ['shuffle']\n      }\n    ]\n  },\n  {\n    default_pattern: true,\n    pattern_name: 'Easy to read',\n    pattern_icon: 'visibility',\n    id: '_strong',\n    pattern: [\n      {\n        type: 'group',\n        group: [\n          {\n            type: 'regex',\n            regex: '/[A-HKMNP-Z0-9a-hkmnp-z]/g',\n            quantity: 8,\n            repeat: true\n          }\n        ],\n        actions: ['shuffle']\n      },\n      {\n        type: 'string',\n        string: '-'\n      },\n      {\n        type: 'group',\n        group: [\n          {\n            type: 'regex',\n            regex: '/[A-HKMNP-Z0-9a-hkmnp-z]/g',\n            quantity: 8,\n            repeat: true\n          }\n        ],\n        actions: ['shuffle']\n      },\n      {\n        type: 'string',\n        string: '-'\n      },\n      {\n        type: 'group',\n        group: [\n          {\n            type: 'regex',\n            regex: '/[A-HKMNP-Z0-9a-hkmnp-z]/g',\n            quantity: 8,\n            repeat: true\n          }\n        ],\n        actions: ['shuffle']\n      }\n    ]\n  }\n];\n\n// Function to get all the patterns saved in the Local Storage\nfunction listPatterns(returnLocalStorageKey) {\n  var list = searchItemsbyname('pwdgen2_pattern_b_');\n  var list_len = list.length;\n  var result = [];\n  for (var p = 0; p < list_len; p++) {\n    if (LS.hasOwnProperty(list[p])) {\n      result.push(Object.assign(JSON.parse(String(LS.getItem(list[p]))), returnLocalStorageKey ? { LocalStorageKey: list[p] } : {}));\n    }\n  }\n  return result;\n}\n\nconst pwd_pattern_custom = [];\n\n// Function to get the default and saved patterns\nconst getPatterns = function (returnLocalStorageKey) {\n  fine_grained_password.pwd_pattern_custom = fine_grained_password.listPatterns(returnLocalStorageKey);\n  return pwd_pattern_default.concat(fine_grained_password.pwd_pattern_custom);\n};\n\n// Function to generate a string depending on the pattern\nfunction generate(options, mode) {\n  // Use lodash to clone the options (pattern) to avoid syncing with the original list declared above → make the declared pattern usable repeatedly\n  const pattern = _.cloneDeep(options);\n  const original_pattern = _.cloneDeep(options);\n\n  // Production mode: only return the results\n  // Editor mode: return the results, component objects, and error messages\n  if (mode === 'production') {\n    var d: string = '';\n  }\n  if (mode === 'editor') {\n    var d: Array = [];\n  }\n\n  const get_chars_from_regex = function (regex) {\n    // Generate a long string\n    const input: string = String.fromCharCode(...Array.from({ length: Math.pow(2, 16) }, (_, i) => i));\n    // Use the input regular expression to select matched characters\n    const matches: any = String(input).match(regex);\n    // Join the items in the array\n    const chars: string = matches ? matches.join('') : '';\n    // Return the joined string\n    return chars;\n  };\n\n  const pattern_len: number = pattern.length;\n  for (var e = 0; e < pattern_len; e++) {\n    var this_item = pattern[e];\n    var this_content = this_item[this_item['type']];\n    var result = '';\n\n    if (this_item['type'] === 'regex') {\n      // Check if the regular expression is full (has expression and flags)\n      var this_content_matches = this_content.match(/^\\/(.*)\\/([a-z]*)$/i);\n      var string: string = '';\n      // Get the character source/sample\n      var chars = get_chars_from_regex(new RegExp(this_content_matches[1], this_content_matches[2])).split('');\n      for (var r = 0; r < this_item['quantity']; r++) {\n        // Choose a character from the source\n        var random_index: number = Math.round((chars.length - 1) * Math.random());\n\n        // Put the character to the end of the result\n        string += chars[random_index];\n\n        // If the configuration tells that repeating is not allowed, strike/remove the character from the source to avoid using repeatedly\n        if (!this_item.repeat) {\n          chars.splice(random_index, 1);\n        }\n      }\n      result = String(string);\n    }\n\n    if (this_item['type'] === 'string') {\n      // Directly put the string to the end of the result\n      result = String(this_content);\n    }\n\n    if (this_item['type'] === 'list') {\n      for (var r = 0; r < this_item['quantity']; r++) {\n        // Choose an item from the list\n        var random_index: number = Math.round((this_content.length - 1) * Math.random());\n        // Put the content of the item to the end of the result\n        result += this_content[random_index];\n        if (!this_item.repeat) {\n          // If the configuration tells that repeating is not allowed, strike/remove the item from the list to avoid using repeatedly\n          this_content.splice(random_index, 1);\n        }\n      }\n    }\n\n    if (this_item['type'] === 'group') {\n      // Use recursive way to process the components in a group\n      result = fine_grained_password.generate(this_content, 'production');\n      // Carry out the actions\n      if (this_item.hasOwnProperty('actions')) {\n        var actions = this_item['actions'];\n        var actions_len = actions.length;\n        for (var j = 0; j < actions_len; j++) {\n          if (actions[j] === 'shuffle') {\n            result = utilities.shuffleSelf(result.split(''), result.length).join('');\n            continue;\n          }\n        }\n      }\n    }\n\n    if (mode === 'production') {\n      d += result;\n    }\n    if (mode === 'editor') {\n      d.push({ result: result, component: original_pattern[e] });\n    }\n  }\n  return d;\n}\n\nfunction checkPatternQualification(pattern) {\n  var json = _.cloneDeep(pattern);\n  var result = 1;\n  var errors: Array = [];\n\n  const omitobject = function (object) {\n    var obj = _.cloneDeep(object);\n    if (typeof object === 'object' && !Array.isArray(object)) {\n      for (var w in obj) {\n        if (typeof obj[w] === 'object' && !Array.isArray(obj[w])) {\n          obj[w] = '{...}';\n        }\n        if (typeof obj[w] === 'object' && Array.isArray(obj[w])) {\n          obj[w] = '[...]';\n        }\n      }\n      return JSON.stringify(obj);\n    }\n  };\n\n  const check_hasOwnProperty = function (object, property) {\n    if (typeof object === 'object') {\n      if (object.hasOwnProperty(property)) {\n        return 1;\n      } else {\n        errors.push({ message: `The property \"${property}\" is not found in ${omitobject(object)}.`, type: 'lack' });\n        return 0;\n      }\n    }\n    errors.push({ message: `Cannot check the property \"${property}\" due to a type error of ${String(object)}.`, type: 'internal' });\n    return 0;\n  };\n\n  const check = function (object) {\n    var result = 1;\n    result *= check_hasOwnProperty(object, 'type');\n    var type = object['type'];\n    if (type === 'string' || type === 'regex' || type === 'list' || type === 'group') {\n      result *= check_hasOwnProperty(object, object['type']);\n    } else {\n      errors.push({ message: `The type \"${type}\" in ${omitobject(object)} is not supported at this time.`, type: 'type' });\n      result *= 0;\n    }\n    if (type === 'string') {\n      if (!(typeof object['string'] === 'string')) {\n        errors.push({ message: `Type of the property \"string\" in ${omitobject(object)} is not a string.`, type: 'type' });\n        result *= 0;\n      }\n    }\n    if (type === 'regex' || type === 'list') {\n      result *= check_hasOwnProperty(object, 'quantity');\n      result *= check_hasOwnProperty(object, 'repeat');\n      if (!(typeof object['quantity'] === 'number')) {\n        errors.push({ message: `Type of the property \"quantity\" in ${omitobject(object)} is not a number.`, type: 'type' });\n        result *= 0;\n      }\n      if (!(typeof object['repeat'] === 'boolean')) {\n        errors.push({ message: `Type of the property \"repeat\" in ${omitobject(object)} is not boolean (true or false).`, type: 'type' });\n        result *= 0;\n      }\n    }\n    if (type === 'list') {\n      if (typeof object['list'] === 'object' && Array.isArray(object['list'])) {\n        var list = object['list'];\n        var list_len: number = list.length;\n        for (var e = 0; e < list_len; e++) {\n          if (!(typeof list[e] === 'string')) {\n            errors.push({ message: `Type of the item ${e} in the list of ${omitobject(object)} is not a string.`, type: 'type' });\n            result *= 0;\n          }\n        }\n      } else {\n        errors.push({ message: 'Cannot get item due to type error or property not existing.', type: 'internal' });\n        result *= 0;\n      }\n    }\n    if (type === 'group') {\n      if (typeof object['actions'] === 'object' && Array.isArray(object['actions'])) {\n        var actions = object['actions'];\n        var actions_len: number = actions.length;\n        for (var e = 0; e < actions_len; e++) {\n          if (!(typeof actions[e] === 'string')) {\n            errors.push({ message: `An item in actions must be a string.`, type: 'type' });\n            result *= 0;\n          } else {\n            if (!(actions[e] === 'shuffle')) {\n              errors.push({ message: `Cannot use ${actions[e]} at this time due to an unsupported value.`, type: 'invalid value' });\n              result *= 0;\n            }\n          }\n        }\n      }\n      if (typeof object['group'] === 'object' && Array.isArray(object['group'])) {\n        var group = object['group'];\n        var group_len: number = group.length;\n        for (var e = 0; e < group_len; e++) {\n          result *= check(group[e]);\n        }\n      }\n    }\n    if (type === 'regex') {\n      if (typeof object['regex'] === 'string') {\n        if (!object['regex'].match(/^\\/(.*)\\/([a-z]*)$/i)) {\n          errors.push({ message: `The regex in ${JSON.stringify(object)} is invalid on formats.`, type: 'invalid value' });\n          result *= 0;\n        }\n      } else {\n        errors.push({ message: `The type of the property \"regex\" in ${omitobject(object)} is not a string.`, type: 'type' });\n        result *= 0;\n      }\n    }\n    if (result === 1) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  if (typeof json === 'object') {\n    result *= check_hasOwnProperty(json, 'pattern_name');\n    result *= check_hasOwnProperty(json, 'pattern_icon');\n    result *= check_hasOwnProperty(json, 'pattern');\n    if (!(typeof json['pattern_name'] === 'string')) {\n      errors.push({ message: `Type of the property \"pattern_name\" in ${omitobject(json)} is not a string.`, type: 'type' });\n      result *= 0;\n    }\n    if (!(typeof json['pattern_icon'] === 'string')) {\n      errors.push({ message: `Type of the property \"pattern_icon\" in ${omitobject(json)} is not a string.`, type: 'type' });\n      result *= 0;\n    }\n    if (typeof json['pattern'] === 'object' && Array.isArray(json['pattern'])) {\n      var pattern = json['pattern'];\n      var pattern_len: number = pattern.length;\n      for (var i = 0; i < pattern_len; i++) {\n        result *= check(pattern[i]);\n      }\n    } else {\n      errors.push({ message: `Type of the property \"pattern\" in ${omitobject(json)} is not an array.`, type: 'type' });\n      result *= 0;\n    }\n  } else {\n    errors.push({ message: `Type of the thing you want to check is not an object.`, type: 'internal' });\n    result *= 0;\n  }\n  if (result === 1) {\n    result = true;\n  } else {\n    result = false;\n  }\n  return { errors: errors, result: result };\n}\n\n// Expose functions to the global scope\nwindow.fine_grained_password = {\n  pwd_pattern_custom,\n  generate,\n  listPatterns,\n  getPatterns,\n  checkPatternQualification\n};\n\nexport default window.fine_grained_password;\n"],"names":["checkPassword","string","cache","id","judgePoints","points","r","g","phrase","b","concat","LS_cache_key","nowtime","Date","getTime","LS","hasOwnProperty","cached_result_points","parseInt","String","getItem","split","cached_result_time_stamp","ju","color","details","removeItem","x","length","Math","log","arr","arr_len","randomness","n_arr","json","t","w","push","c","i","u","charCodeAt","sort","a","abs","min","max","pow","repeat","repeat_len","match","join","t_avg","t_s","ty","sqrt","commonWords","words_list","loaded","getWordsList","len","toLowerCase","matched","substring","slice","indexOf","trim","matched_len","replaceAll","checkCommonWordPatterns","floor","getPoints","ju_length","ju_randomness","ju_repeat","ju_complexity","ju_uniqueness","setItem","complexity","uniqueness","report","length_points","randomness_points","repeat_points","complexity_points","uniqueness_points","n1","n2","n3","n4","points_summary","used_instructions","Set","has","Length_Instructions","add","Randomness_Instructions","Repeat_Instructions","Complexity_Instructions","Uniqueness_Instructions","getReport","_","cloneDeep","require","pwd_pattern_default","default_pattern","pattern_name","pattern_icon","pattern","type","group","regex","quantity","list","actions","window","fine_grained_password","pwd_pattern_custom","generate","options","mode","original_pattern","d","input","matches","pattern_len","e","this_item","this_content","result","this_content_matches","chars","RegExp","fromCharCode","apply","_toConsumableArray","Array","from","random_index","round","random","splice","actions_len","j","utilities","shuffleSelf","component","listPatterns","returnLocalStorageKey","searchItemsbyname","list_len","p","Object","assign","JSON","parse","LocalStorageKey","getPatterns","checkPatternQualification","errors","omitobject","object","obj","_typeof","isArray","stringify","check_hasOwnProperty","property","message","check","group_len"],"sourceRoot":""}