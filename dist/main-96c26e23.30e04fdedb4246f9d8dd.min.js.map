{"version":3,"file":"main-96c26e23.30e04fdedb4246f9d8dd.min.js","mappings":"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","sources":["webpack://pwdgen2/./src/core/search.ts","webpack://pwdgen2/./src/core/share.ts","webpack://pwdgen2/./src/core/storage.ts","webpack://pwdgen2/./src/core/utilities.ts","webpack://pwdgen2/./src/core/words-list.ts"],"sourcesContent":["// Import required functions\nimport utilities from './utilities';\nimport { listSavedPassword } from './storage';\n\n// Function to create a search index from saved passwords\nfunction createSearchIndex() {\n  // Get the list of saved passwords\n  var list = listSavedPassword();\n  var list_len = list.length;\n\n  // Initialize the search index object\n  Xsearch.searchIndex = { all: [], hashtags: [], date: [], len: [] };\n\n  // Loop through each saved password to create search index\n  for (var r = 0; r < list_len; r++) {\n    // Initialize an array to store all searchable data for this entry\n    var all = [];\n\n    // Push password, website, note, and username to the all array\n    all.push(list[r].password);\n    all.push(list[r].website);\n    all.push(list[r].note === null ? '' : utilities.deur(atob(list[r].note)));\n    all.push(list[r].username);\n\n    // Convert timestamp to a human-readable format and push to the all array\n    var date = new Date(list[r].time_stamp);\n    all.push(utilities.timestr(date));\n\n    // Get hashtags from the note and push to the all array\n    var hashtags = utilities.gethashtags(all[2], true);\n    var hashtags_len = hashtags.length;\n    all.push(hashtags.join(' '));\n\n    // Push date-related tags to the all array\n    all.push('year:' + date.getFullYear());\n    all.push('month:' + (date.getMonth() + 1));\n    all.push('date:' + date.getDate());\n\n    // Push password length tag to the all array\n    all.push('length:' + String(list[r].password).length);\n\n    // Convert the all array to Unicode array and push to the search index\n    var all_unicode = utilities.unicode_arr(String(all.join('')).toLowerCase());\n    var hashtags_unicode = utilities.unicode_arr(hashtags.join(''));\n    Xsearch.searchIndex.all.push({\n      id: list[r].id,\n      password: all[0],\n      website: all[1],\n      note: all[2],\n      username: all[3],\n      date: all[4],\n      len: all[9],\n      all_unicode: all_unicode,\n      hashtags: hashtags,\n      hashtags_unicode: hashtags_unicode,\n      all: all.join(' '),\n      type: 0\n    });\n\n    // Add hashtags, date tags, and length tags to their respective arrays in the search index\n    for (var w = 0; w < hashtags_len; w++) {\n      if (!(Xsearch.searchIndex.hashtags.indexOf(hashtags[w]) > -1)) {\n        Xsearch.searchIndex.hashtags.push(hashtags[w]);\n      }\n    }\n    for (var w = 6; w < 9; w++) {\n      if (!(Xsearch.searchIndex.date.indexOf(all[w]) > -1)) {\n        Xsearch.searchIndex.date.push(all[w]);\n      }\n    }\n    if (!(Xsearch.searchIndex.len.indexOf(all[9]) > -1)) {\n      Xsearch.searchIndex.len.push(all[9]);\n    }\n  }\n\n  // Return the created search index\n  return Xsearch.searchIndex;\n}\n\n// Function to search passwords based on a query in the search index\nfunction search_passwords(query, index) {\n  // Initialize variables to store suggestions and results\n  var index_hashtags_len = index.hashtags.length;\n  var index_date_len = index.date.length;\n  var index_len_len = index.len.length;\n  var suggestions_hashtags = [];\n  var suggestions_date = [];\n  var suggestions_len = [];\n  var suggestions = [];\n\n  // Search for matching hashtags in the search index\n  for (var h = 0; h < index_hashtags_len; h++) {\n    if (index.hashtags[h].indexOf(query) > -1) {\n      suggestions_hashtags.push({ type: 1, suggestion: index.hashtags[h], similarity: suggestions_hashtags.length < 10 ? utilities.jaroWinklerDistance(query, index.hashtags[h]) : 0 });\n    }\n  }\n\n  // Search for matching date tags in the search index\n  for (var d = 0; d < index_date_len; d++) {\n    if (index.date[d].indexOf(query) > -1) {\n      suggestions_date.push({ type: 2, suggestion: index.date[d], similarity: suggestions_date.length < 10 ? utilities.jaroWinklerDistance(query, index.date[d]) : 0 });\n    }\n  }\n\n  // Search for matching length tags in the search index\n  for (var d = 0; d < index_len_len; d++) {\n    if (index.len[d].indexOf(query) > -1) {\n      suggestions_date.push({ type: 4, suggestion: index.len[d], similarity: suggestions_len.length < 10 ? utilities.jaroWinklerDistance(query, index.len[d]) : 0 });\n    }\n  }\n\n  // Combine and sort suggestions\n  if (suggestions_hashtags.length < 10 && suggestions_date.length < 10 && suggestions_len.length < 10) {\n    suggestions = suggestions_hashtags\n      .concat(suggestions_date)\n      .concat(suggestions_len)\n      .sort(function (a, b) {\n        return b.similarity - a.similarity;\n      });\n  } else {\n    suggestions = suggestions_hashtags.concat(suggestions_date).concat(suggestions_len).sort();\n  }\n\n  // Convert query to Unicode array for matching\n  var query_unicode = utilities.unicode_arr(query);\n  var query_unicode_len = query_unicode.length;\n  var result = [];\n  var index_len = index.all.length;\n\n  // Loop through the search index to find matching results\n  for (var q = 0; q < index_len; q++) {\n    var this_index = index.all[q];\n    var unicode_check = false;\n\n    // Check if the query Unicode array matches any Unicode character in the search index\n    for (var u = 0; u < query_unicode_len; u++) {\n      if (this_index.all_unicode.indexOf(query_unicode[u]) > -1) {\n        unicode_check = true;\n        break;\n      }\n    }\n\n    // If no Unicode character matches, continue to the next index entry\n    if (unicode_check === false) {\n      continue;\n    } else {\n      var text_check = false;\n\n      // Check if the query matches any searchable text in the index entry\n      if (String(this_index.all).toLowerCase().indexOf(query) > -1) {\n        text_check = true;\n      } else {\n        if (String(this_index.note).toLowerCase().indexOf(query) > -1) {\n          text_check = true;\n        } else {\n          if (String(this_index.website).toLowerCase().indexOf(query) > -1) {\n            text_check = true;\n          } else {\n            if (String(this_index.username).toLowerCase().indexOf(query) > -1) {\n              text_check = true;\n            } else {\n              if (String(this_index.password).indexOf(query) > -1) {\n                text_check = true;\n              } else {\n                if (String(this_index.date).indexOf(query) > -1) {\n                  text_check = true;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // If text matches, add the index entry to the result array\n      if (text_check) {\n        result.push(this_index);\n      }\n    }\n  }\n\n  // Return the search result and suggestions\n  return { result: result, suggestions: suggestions.slice(0, 5), query: query };\n}\n\n// Initialize an empty search index object\nconst searchIndex: object = { all: [], hashtags: [], date: [], len: [] };\n\n// Expose functions and search index object to the global scope\nwindow.Xsearch = {\n  createSearchIndex,\n  search_passwords,\n  searchIndex\n};\nexport default window.Xsearch;\n","import interaction from '../user-interfaces/interaction';\nimport utilities from './utilities';\nimport fine_grained_password from './fine-grained-password';\nimport { LS } from './storage';\n\ntype shareDataType = 'pattern';\ntype shareDataFormat = 'json' | 'string';\nfunction shareViaURL(type: shareDataType, from: string, data: string, format: shareDataFormat): void {\n  var url = new URL('https://erichsia7.github.io/pwdgen2');\n  url.searchParams.append('share', '1');\n  url.searchParams.append('type', type);\n  url.searchParams.append('from', from);\n  url.searchParams.append('data', btoa(utilities.enur(data)));\n  url.searchParams.append('format', format);\n\n  if (navigator.canShare) {\n    navigator.share({\n      title: `Share ${type}`,\n      url: url.toString()\n    });\n  } else {\n    interaction.copyText(url.toString());\n    interaction.prompt.prompt_message('Copied link for sharing.');\n  }\n}\n\nfunction receiveSharedContentFromURL(url: string): void {\n  url = new URL(url);\n  var parameters = url.searchParams;\n  var share = parameters.get('share');\n  if (share === '1') {\n    var type = parameters.get('type');\n    var from = parameters.get('from');\n    var data = utilities.deur(atob(String(parameters.get('data'))));\n    var format = parameters.get('format');\n    var valid = false;\n    var json = {};\n    if (format === 'json') {\n      try {\n        json = JSON.parse(data);\n        valid = true;\n      } catch (e) {\n        interaction.prompt.prompt_message('Invalid shared data.');\n      }\n    }\n    if (valid) {\n      if (type === 'pattern') {\n        json = interaction.pattern_editor.addIdentityToPattern(json);\n        var id = fine_grained_password.generate(\n          [\n            {\n              type: 'string',\n              string: 'pwdgen2_pattern_b_'\n            },\n            {\n              type: 'regex',\n              regex: '/[a-zA-Z0-9]/g',\n              quantity: 32,\n              repeat: true\n            }\n          ],\n          'production'\n        );\n        if (!LS.hasOwnProperty(id)) {\n          LS.setItem(id, JSON.stringify(json));\n          interaction.prompt.prompt_message('Saved shared pattern.');\n          interaction.pattern_manager.openPatternManager();\n          history.replaceState(null, document.title, 'https://erichsia7.github.io/pwdgen2/');\n        }\n      }\n    }\n  }\n}\n\nwindow.Xshare = {\n  shareViaURL,\n  receiveSharedContentFromURL\n};\n\nexport default window.Xshare;\n","// Import required modules and interfaces\nimport fine_grained_password from './fine-grained-password';\nimport utilities from './utilities';\nimport interaction from '../user-interfaces/interaction';\nconst md5 = require('md5');\n\n// Interface for an encrypted password entry\ninterface EncryptedPassword {\n  website: string;\n  username: string;\n  encrypted_password: string;\n  aes_iv: number; // Initialization vector for encryption\n  note: string | null; // Comes in base64 format\n  time_stamp: string; // Comes in ISO 8601 format\n  id: string;\n}\n\n// Interface for a decrypted password entry\ninterface DecryptedPassword {\n  website: string;\n  username: string;\n  password: string;\n  note: string | null; // Comes in base64 format\n  time_stamp: string; // Comes in ISO 8601 format\n  id: string;\n}\n\n// Export Local Storage object to the global scope\nexport const LS = window.localStorage;\n\n// Function to search items by name in Local Storage\nexport function searchItemsbyname(name) {\n  var gh = [];\n  for (var t in window.localStorage) {\n    if (String(t).indexOf(name) > -1) {\n      gh.push(t);\n    }\n  }\n  return gh;\n}\n\n// Function to list all saved passwords with decryption\nexport function listSavedPassword(): object[] {\n  var list = searchItemsbyname('pwdgen2_saved_b');\n  var list_len = list.length;\n  var list_decrypted = [];\n  for (var k = 0; k < list_len; k++) {\n    // Decrypt the encrypted password\n    var this_item = JSON.parse(String(LS.getItem(list[k])));\n    if (this_item.hasOwnProperty('history')) {\n      continue;\n    }\n    var url = '';\n    var website_icon = false;\n    if (utilities.isValidURL(this_item.website)) {\n      url = this_item.website;\n      if (!(this_item.website.indexOf('http://') > -1 || this_item.website.indexOf('https://') > -1)) {\n        url = 'https://' + url;\n      }\n      var url_obj = new URL(url);\n      url_obj.search = '';\n      url_obj.protocol = 'http://';\n      website_icon = `https://remote-ivory-bovid.faviconkit.com/${url_obj.toString().replace('http://', '')}/256`;\n    }\n    // Add the decrypted entry to the list\n    list_decrypted.push({\n      website_icon: website_icon,\n      website: this_item.website,\n      password: utilities.deur(utilities.decryptString(this_item.encrypted_password, this_item.aes_iv)),\n      username: this_item.username,\n      note: this_item.note,\n      time_stamp: this_item.time_stamp,\n      id: this_item.id\n    });\n  }\n  // Sort the list based on timestamp\n  list_decrypted.sort(function (a, b) {\n    return new Date(b.time_stamp).getTime() - new Date(a.time_stamp).getTime();\n  });\n  return list_decrypted;\n}\n\n// Function to upgrade data from an older version\nexport function upgradeData(): void {\n  // Define the ID pattern for generating new IDs\n  var id_pattern = [\n    {\n      type: 'group',\n      group: [\n        {\n          type: 'regex',\n          regex: '/[A-Za-z0-9]/g',\n          quantity: 32,\n          repeat: true\n        }\n      ],\n      actions: ['shuffle']\n    }\n  ];\n\n  // Search for items from the Local Storage\n  var list = searchItemsbyname('pwdgen2_saved_a');\n  if (list.length <= 0) {\n    return '';\n  }\n  var list_len = list.length;\n  var list_encrypted = [];\n  for (var k = 0; k < list_len; k++) {\n    // Extract data from the old version (<=1.8) and upgrade to the new version (>=1.9)\n    var this_item = String(LS.getItem(list[k])).split(':');\n    var hash = list[k].split('_')[3];\n    var pwtime = new Date();\n    pwtime.setTime(this_item[2]);\n    var id = fine_grained_password.generate(id_pattern, 'production');\n    var note = LS.getItem(`pwdgen2_saved_notes_cf_${hash}`) || '';\n    list_encrypted.push({\n      website: '',\n      encrypted_password: this_item[0],\n      aes_iv: parseInt(this_item[1]),\n      note: note,\n      time_stamp: pwtime,\n      id: id\n    });\n    LS.setItem(`pwdgen2_saved_b_${id}`, JSON.stringify(list_encrypted[list_encrypted.length - 1]));\n    LS.removeItem(list[k]);\n  }\n}\n\n// Function to set a password entry\nexport function setPassword(password, username, time, website, note, id): void {\n  // Encrypt the password and save the entry to Local Storage\n  var encryption = utilities.encryptString(utilities.enur(password));\n  var json = {\n    website: website,\n    username: username,\n    encrypted_password: encryption[0],\n    aes_iv: encryption[1],\n    note: note === '' ? null : btoa(utilities.enur(note)),\n    time_stamp: time,\n    id: id\n  };\n  LS.setItem('pwdgen2_saved_b_' + id, JSON.stringify(json));\n}\n\n// Function to add a new password entry\nexport function addPassword(password, username, website, note): string {\n  // Generate a new ID pattern for the entry\n  var id_pattern = [\n    {\n      type: 'group',\n      group: [\n        {\n          type: 'regex',\n          regex: '/[A-Za-z0-9]/g',\n          quantity: 32,\n          repeat: true\n        }\n      ],\n      actions: ['shuffle']\n    }\n  ];\n\n  // Get the current timestamp\n  var time = new Date().toISOString();\n  // Generate a new ID\n  var id = fine_grained_password.generate(id_pattern, 'production');\n\n  // Set the password entry\n  setPassword(password, username, time, website, note, id);\n  return id;\n}\n\n// Function to modify an existing password entry\nexport function modifyPassword(password, username, website, note, id): void | string {\n  // Get the Local Storage keys for the entry and its history\n  var localStorage_key = `pwdgen2_saved_b_${id}`;\n  var localStorage_history_key = `pwdgen2_saved_b_history_${id}`;\n\n  // Check if the entry exists\n  if (LS.hasOwnProperty(localStorage_key)) {\n    var json = JSON.parse(String(LS.getItem(localStorage_key)));\n\n    // Encrypt the password and create the modified JSON\n    var encryption = utilities.encryptString(utilities.enur(password));\n    var modified_json: EncryptedPassword = {\n      website: website,\n      username: username,\n      encrypted_password: encryption[0],\n      aes_iv: encryption[1],\n      note: note === '' ? null : btoa(utilities.enur(note)),\n      time_stamp: json.time_stamp,\n      id: id\n    };\n\n    // Check if the modified entry is the same as the existing one, if yes, return '' to quit function\n    if (md5(JSON.stringify({ website: json.website, username: json.username, password: utilities.deur(utilities.decryptString(json.encrypted_password, json.aes_iv)), note: json.note })) === md5(JSON.stringify({ website: website, username: username, password: password, note: note }))) {\n      return '';\n    }\n\n    // Create or update the history entry\n    if (LS.hasOwnProperty(localStorage_history_key)) {\n      var history: object = JSON.parse(String(LS.getItem(localStorage_history_key)));\n    } else {\n      var history: object = { id: id, history: [] };\n    }\n    history['history'].push(json);\n    LS.setItem(localStorage_history_key, JSON.stringify(history));\n\n    // Update the password entry\n    LS.setItem(localStorage_key, JSON.stringify(modified_json));\n  }\n}\n\n// Function to remove a password entry\nexport function removePassword(id): boolean {\n  // Check if the entry exists, and if yes, remove it from Local Storage\n  if (LS.hasOwnProperty(`pwdgen2_saved_b_${id}`)) {\n    LS.removeItem(`pwdgen2_saved_b_${id}`);\n    if (LS.hasOwnProperty(`pwdgen2_saved_b_history_${id}`)) {\n      LS.removeItem(`pwdgen2_saved_b_history_${id}`);\n    }\n    return true;\n  }\n  return false;\n}\n\n// Function to handle the import of data\nexport function importdatahandler(event) {\n  // Read the file and import the data to Local Storage\n  var f = event.target.files[0];\n  var reader = new FileReader();\n  reader.onload = (function (theFile) {\n    return function (e) {\n      var fileTextContent = e.target.result;\n      var json = JSON.parse(fileTextContent);\n      var data = json.data;\n      var data_len = data.length;\n\n      // Save each entry to Local Storage\n      for (var i = 0; i < data_len; i++) {\n        var this_item = data[i];\n        localStorage.setItem(this_item.key, JSON.stringify(JSON.parse(this_item.content)));\n      }\n\n      // Upgrade the data to the new version\n      upgradeData();\n\n      // Display success message and update the user interface\n      interaction.prompt.prompt_message('Imported data successfully.');\n      interaction.main_page.printSavedPasswordList();\n    };\n  })(f);\n  reader.readAsText(f);\n}\n\n// Function to generate an export file\nexport function generateExportFile() {\n  // Get all saved password entries and create a JSON object for export\n  var list = searchItemsbyname('pwdgen2_saved_b_').concat(searchItemsbyname('pwdgen2_pattern_b_'));\n  var list_len = list.length;\n  var export_list = [];\n  for (var k = 0; k < list_len; k++) {\n    var this_item = String(LS.getItem(list[k]));\n    export_list.push({ key: list[k], content: this_item });\n  }\n\n  // Return the JSON object as a string\n  return JSON.stringify({ data: export_list, version: '2023-07-30', export_time_stamp: new Date().toISOString() }, null, 2);\n}\n","// Import required functions\nimport fine_grained_password from './fine-grained-password';\nvar aesjs = require('aes-js');\n\nfunction isValidURL(url: string) {\n  const regex = /^(?:https?:\\/\\/)?(?:www\\.)?([a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})(?:\\/.*)?$/;\n  return regex.test(url);\n}\n\nfunction encryptString(string) {\n  var initialization_vector_pattern = [\n    {\n      type: 'regex',\n      regex: '/[1-9]/g',\n      quantity: 1,\n      repeat: false\n    },\n    {\n      type: 'group',\n      group: [\n        {\n          type: 'regex',\n          regex: '/[0-9]/g',\n          quantity: 9,\n          repeat: true\n        }\n      ],\n      actions: ['shuffle']\n    }\n  ];\n  var initialization_vector = parseInt(fine_grained_password.generate(initialization_vector_pattern, 'production'));\n  var keyu = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n  var textBytes = aesjs.utils.utf8.toBytes(string);\n  var aesCtr = new aesjs.ModeOfOperation.ctr(keyu, new aesjs.Counter(initialization_vector));\n  var encryptedBytes = aesCtr.encrypt(textBytes);\n  var encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\n  return [encryptedHex, initialization_vector];\n}\n\nfunction decryptString(encrypted_string, initialization_vector) {\n  var keye = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n  var encryptedBytese = aesjs.utils.hex.toBytes(encrypted_string);\n  var aesCtre = new aesjs.ModeOfOperation.ctr(keye, new aesjs.Counter(parseInt(initialization_vector)));\n  var decryptedBytese = aesCtre.decrypt(encryptedBytese);\n  var decryptedText = aesjs.utils.utf8.fromBytes(decryptedBytese);\n  return decryptedText;\n}\nfunction enur(u) {\n  return encodeURIComponent(u);\n}\nfunction deur(u) {\n  return decodeURIComponent(u);\n}\n\nfunction gid(n) {\n  var genidchars = '0123456789abcdefghijklmnopqrstuvwxyz';\n  var genid = '';\n  for (var i = 0; i < 16; i++) {\n    var genrandomNumber = Math.floor(Math.random() * genidchars.length);\n    genid += genidchars.substring(genrandomNumber, genrandomNumber + 1);\n  }\n  if (!(n === undefined)) {\n    n = n.replaceAll('_', '-');\n    return n + '-' + genid + '' + new Date().getTime();\n  }\n  return genid + '' + new Date().getTime();\n}\n\nfunction shuffleSelf(array: object, size: number) {\n  var index = -1;\n  var length = array.length;\n  var lastIndex = length - 1;\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = index + Math.floor(Math.random() * (lastIndex - index + 1));\n    var value = array[rand];\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nfunction che(y: number) {\n  if (y < 10) {\n    return '0' + y;\n  } else {\n    return y;\n  }\n}\n\nfunction timestr(date: Date) {\n  return date.getFullYear() + '-' + che(date.getMonth() + 1) + '-' + che(date.getDate()) + ' ' + che(date.getHours()) + ':' + che(date.getMinutes()) + ':' + che(date.getSeconds());\n}\n\nfunction checkTouchFeatures(): boolean {\n  if ('ontouchstart' in window || navigator.maxTouchPoints) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction qe(selector) {\n  var elt = document.querySelector(selector);\n  if (elt === null) {\n    elt = document.createElement('div');\n  }\n  return elt;\n}\n\nfunction qeAll(selector) {\n  return document.querySelectorAll(selector);\n}\n\nfunction copyProperty(source: HTMLElement, target: HTMLElement, property: string): void {\n  target.style.setProperty(property, source.style.getPropertyValue(property));\n}\n\nfunction unicode_arr(str) {\n  var str_len = str.length;\n  var unicode_arr = [];\n  for (var t = 0; t < str_len; t++) {\n    var unicode = str.charCodeAt(t);\n    if (!(unicode_arr.indexOf(unicode) > -1)) {\n      unicode_arr.push(unicode);\n    }\n  }\n  return unicode_arr;\n}\n\nfunction jaroWinklerDistance(str1, str2) {\n  var len1 = str1.length;\n  var len2 = str2.length;\n  var matchDistance = Math.floor(Math.max(len1, len2) / 2) - 1;\n  var matches1 = new Array(len1).fill(false);\n  var matches2 = new Array(len2).fill(false);\n  let matches = 0;\n  let transpositions = 0;\n\n  for (let i = 0; i < len1; i++) {\n    var start = Math.max(0, i - matchDistance);\n    var end = Math.min(i + matchDistance + 1, len2);\n\n    for (let j = start; j < end; j++) {\n      if (!matches2[j] && str1[i] === str2[j]) {\n        matches1[i] = true;\n        matches2[j] = true;\n        matches++;\n        break;\n      }\n    }\n  }\n\n  if (matches === 0) {\n    return 0;\n  }\n\n  let k = 0;\n  for (let i = 0; i < len1; i++) {\n    if (matches1[i]) {\n      while (!matches2[k]) {\n        k++;\n      }\n      if (str1[i] !== str2[k]) {\n        transpositions++;\n      }\n      k++;\n    }\n  }\n\n  var similarity = (matches / len1 + matches / len2 + (matches - transpositions / 2) / matches) / 3;\n  var prefix = 0;\n  while (str1[prefix] === str2[prefix] && prefix < 4) {\n    prefix++;\n  }\n\n  var weight = 0.1;\n  return similarity + prefix * weight * (1 - similarity);\n}\n\nfunction gethashtags(str, k) {\n  var hashtag_regex = /\\B#([a-z0-q9]{2,})(?![~!@#$%^&*()=+_`\\-\\|\\\\/'\\[\\]\\{\\}]|[?.,]*\\w)/g;\n  var hashtags = str.match(hashtag_regex);\n  var hashtags_norepeat = [];\n  if (hashtags === null) {\n    return [];\n  }\n  var hashtags_len = hashtags.length;\n  for (var w = 0; w < hashtags_len; w++) {\n    if (!(hashtags_norepeat.indexOf(hashtags[w]) > -1)) {\n      hashtags_norepeat.push(hashtags[w]);\n    }\n  }\n  if (k) {\n    for (var s = 0; s < hashtags_norepeat.length; s++) {\n      var hashtagkey = String(hashtags_norepeat[s]).replaceAll('#', '').toLowerCase();\n      allhashtag[hashtagkey] = hashtags_norepeat[s];\n    }\n  }\n  return hashtags_norepeat;\n}\n\nfunction fetchWithProgress(url, progressCallback) {\n  return new Promise((resolve, reject) => {\n    // Fetch the URL using the Fetch API\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not OK');\n        }\n        const contentLength = Number(response.headers.get('Content-Length'));\n        const reader = response.body.getReader();\n        var receivedBytes = 0;\n        const decoder = new TextDecoder();\n        var textContent = '';\n        function read() {\n          reader\n            .read()\n            .then(({ done, value }) => {\n              if (done) {\n                resolve(textContent);\n                return;\n              }\n              receivedBytes += value.length;\n              const progress = (receivedBytes / 85878) * 100;\n              progressCallback(progress);\n              const chunk = decoder.decode(value, { stream: true });\n              textContent += chunk;\n              read();\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        }\n        read();\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n\nfunction encodeSignsToHtmlEntities(html: string) {\n  return html.replace(/[\\u00A0-\\u9999<>\\&]/g, function (i) {\n    return '&#' + i.charCodeAt(0) + ';';\n  });\n}\n\nfunction isDarkMode(): boolean {\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction hsvToRgb(h, s, v) {\n  // Normalize values\n  h /= 360;\n  s /= 100;\n  v /= 100;\n\n  let r, g, b;\n\n  if (s === 0) {\n    // If saturation is 0, the color is a shade of gray\n    r = g = b = v;\n  } else {\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n  }\n\n  // Convert RGB values to the range of 0-255\n  const rgb = {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n\n  return rgb;\n}\n\nfunction randomColorSet() {\n  var randomIntInRange = function (min, max) {\n    return Math.max(Math.min(Math.round(min + (max - min) * Math.random()), max), min);\n  };\n\n  var h = randomIntInRange(0, 360);\n  var f = function (v: number, a: number) {\n    var hsv_text = { h: h, s: 67, v: v };\n    var hsv_bg = { h: h, s: 100, v: v };\n    var rgb_text = hsvToRgb(hsv_text.h, hsv_text.s, hsv_text.v);\n    var rgb_bg = hsvToRgb(hsv_bg.h, hsv_bg.s, hsv_bg.v);\n    var text = { r: rgb_text.r, g: rgb_text.g, b: rgb_text.b, a: 1, str: `rgba(${rgb_text.r},${rgb_text.g},${rgb_text.b},${1})` };\n    var bg = { r: rgb_bg.r, g: rgb_bg.g, b: rgb_bg.b, a: a, str: `rgba(${rgb_bg.r},${rgb_bg.g},${rgb_bg.b},${a})` };\n    return { text, bg };\n  };\n  return { light: f(75, 0.06), dark: f(100, 0.11) };\n}\n\nfunction blendColors(hexColor, rgbaColor) {\n  var hexToRGBA = function (hex, alpha) {\n    const r = parseInt(hex.substring(1, 3), 16);\n    const g = parseInt(hex.substring(3, 5), 16);\n    const b = parseInt(hex.substring(5, 7), 16);\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  };\n\n  const rgba: Array = rgbaColor\n    .substring(5, rgbaColor.length - 1)\n    .split(',')\n    .map((f) => parseFloat(String(f).trim()));\n  const r: number = rgba[0];\n  const g: number = rgba[1];\n  const b: number = rgba[2];\n  const alpha: number = rgba[3];\n\n  const blendedR: number = Math.round((1 - alpha) * parseInt(hexColor.substring(1, 3), 16) + alpha * r);\n  const blendedG: number = Math.round((1 - alpha) * parseInt(hexColor.substring(3, 5), 16) + alpha * g);\n  const blendedB: number = Math.round((1 - alpha) * parseInt(hexColor.substring(5, 7), 16) + alpha * b);\n\n  return `#${blendedR.toString(16).padStart(2, '0')}${blendedG.toString(16).padStart(2, '0')}${blendedB.toString(16).padStart(2, '0')}`;\n}\n\nfunction stopProp(event): void {\n  var stop = false;\n  if (typeof event === 'object') {\n    if (event instanceof Event) {\n      stop = true;\n    }\n  }\n  if (stop) {\n    event.stopPropagation();\n  }\n}\n\n\n\n// Expose functions to the global scope\nwindow.utilities = {\n  encryptString,\n  decryptString,\n  enur,\n  deur,\n  gid,\n  shuffleSelf,\n  che,\n  timestr,\n  checkTouchFeatures,\n  qe,\n  qeAll,\n  copyProperty,\n  unicode_arr,\n  jaroWinklerDistance,\n  gethashtags,\n  fetchWithProgress,\n  hsvToRgb,\n  randomColorSet,\n  isDarkMode,\n  blendColors,\n  encodeSignsToHtmlEntities,\n  isValidURL,\n  stopProp\n};\n\nexport default window.utilities;\n","// Import required functions\nimport searchItemsbyname from 'src/core/storage';\nimport utilities from './utilities';\nimport { LS } from './storage';\n\nfunction getWordsList() {\n  if (!words_list.loaded) {\n    if (LS.hasOwnProperty('pwdgen2_words_list_cache')) {\n      var text = String(LS.getItem('pwdgen2_words_list_cache'));\n      var array = text.split(/\\n/g).forEach((e) => {\n        if (words_list.c.hasOwnProperty(e.substring(0, 3))) {\n          words_list.c[e.substring(0, 3)].push(e);\n        } else {\n          words_list.c[e.substring(0, 3)] = [e];\n        }\n      });\n      words_list.loaded = true;\n      return '';\n    }\n    var url: string = `https://erichsia7.github.io/pwdgen2/words_list/index.txt?${new Date().getTime()}`;\n    //var url = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQLnA8hJhyZ8V7ZxrgeF6l7kIHahobdTqkXwdmEcBgbC0UNdSFCU1dy7wuFMOzuq_DBx49uzCjknOMJ/pub?gid=0&single=true&output=csv&' + new Date().getTime();\n    var handleProgress = function (progress) {\n      words_list.progress = progress;\n    };\n    utilities\n      .fetchWithProgress(url, handleProgress)\n      .then(function (text) {\n        var array = text.split(/\\n/g).forEach((e) => {\n          if (words_list.c.hasOwnProperty(e.substring(0, 3))) {\n            words_list.c[e.substring(0, 3)].push(e);\n          } else {\n            words_list.c[e.substring(0, 3)] = [e];\n          }\n        });\n        words_list.loaded = true;\n        LS.setItem('pwdgen2_words_list_cache', text);\n      })\n      .catch((error) => {\n        //console.error('Error fetching URL:', error);\n      });\n  }\n}\n\n// Expose functions to the global scope\nwindow.words_list = { loaded: false, progress: 0, c: {}, getWordsList: getWordsList };\n\nexport default window.words_list;\n"],"names":["window","Xsearch","createSearchIndex","list","listSavedPassword","list_len","length","searchIndex","all","hashtags","date","len","r","push","password","website","note","utilities","deur","atob","username","Date","time_stamp","timestr","gethashtags","hashtags_len","join","getFullYear","getMonth","getDate","String","all_unicode","unicode_arr","toLowerCase","hashtags_unicode","id","type","w","indexOf","search_passwords","query","index","index_hashtags_len","index_date_len","index_len_len","suggestions_hashtags","suggestions_date","suggestions_len","suggestions","h","suggestion","similarity","jaroWinklerDistance","d","concat","sort","a","b","query_unicode","query_unicode_len","result","index_len","q","this_index","unicode_check","u","text_check","slice","Xshare","shareViaURL","from","data","format","url","URL","searchParams","append","btoa","enur","navigator","canShare","share","title","toString","interaction","copyText","prompt","prompt_message","receiveSharedContentFromURL","parameters","get","valid","json","JSON","parse","e","pattern_editor","addIdentityToPattern","fine_grained_password","generate","string","regex","quantity","repeat","LS","hasOwnProperty","setItem","stringify","pattern_manager","openPatternManager","history","replaceState","document","md5","require","localStorage","searchItemsbyname","name","gh","t","list_decrypted","k","this_item","getItem","website_icon","isValidURL","url_obj","search","protocol","replace","decryptString","encrypted_password","aes_iv","getTime","upgradeData","id_pattern","group","actions","list_encrypted","split","hash","pwtime","setTime","parseInt","removeItem","addPassword","time","toISOString","encryption","encryptString","setPassword","modifyPassword","localStorage_key","localStorage_history_key","modified_json","removePassword","importdatahandler","event","f","target","files","reader","FileReader","onload","fileTextContent","data_len","i","key","content","main_page","printSavedPasswordList","readAsText","generateExportFile","export_list","version","export_time_stamp","aesjs","che","y","hsvToRgb","s","v","g","Math","floor","p","round","initialization_vector","textBytes","utils","utf8","toBytes","encryptedBytes","ModeOfOperation","ctr","Counter","encrypt","hex","fromBytes","encrypted_string","encryptedBytese","decryptedBytese","decrypt","encodeURIComponent","decodeURIComponent","gid","n","genidchars","genid","genrandomNumber","random","substring","undefined","replaceAll","shuffleSelf","array","size","lastIndex","rand","value","getHours","getMinutes","getSeconds","checkTouchFeatures","maxTouchPoints","qe","selector","elt","querySelector","createElement","qeAll","querySelectorAll","copyProperty","source","property","style","setProperty","getPropertyValue","str","str_len","unicode","charCodeAt","str1","str2","len1","len2","matchDistance","max","matches1","Array","fill","matches2","matches","transpositions","start","end","min","j","prefix","match","hashtags_norepeat","hashtagkey","allhashtag","fetchWithProgress","progressCallback","Promise","resolve","reject","fetch","then","response","ok","Error","Number","headers","body","getReader","receivedBytes","decoder","TextDecoder","textContent","read","_ref","done","chunk","decode","stream","error","randomColorSet","hsv_text","hsv_bg","rgb_text","rgb_bg","text","bg","light","dark","isDarkMode","matchMedia","blendColors","hexColor","rgbaColor","rgba","map","parseFloat","trim","alpha","blendedR","blendedG","blendedB","padStart","encodeSignsToHtmlEntities","html","test","stopProp","stop","_typeof","Event","stopPropagation","words_list","loaded","progress","c","getWordsList","forEach"],"sourceRoot":""}