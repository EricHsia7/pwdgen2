{"version":3,"file":"main-931168cd.8df211fe8301a3a11cd8.min.js","mappings":"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","sources":["webpack://pwdgen2/./src/core/check-password.ts","webpack://pwdgen2/./src/core/fine-grained-password.ts"],"sourcesContent":["import words_list from './words-list'\nimport { LS } from './storage'\n\nexport function checkCommonWordPatterns(string) {\n  if (!words_list.loaded) {\n    words_list.getWordsList()\n    return 0\n  }\n  string = string.toLowerCase()\n  var len = string.length\n\n  var matched = []\n  for (var i = 0; i < len; i++) {\n    if (words_list.c.hasOwnProperty(string.substring(i, i + 3))) {\n      var arr = words_list.c[string.substring(i, i + 3)].slice()\n      var arr_len = arr.length\n      for (var r = 0; r < arr_len; r++) {\n        if (string.indexOf(arr[r].trim()) !== -1 && matched.indexOf(arr[r]) < 0) {\n          matched.push(arr[r])\n        }\n      }\n    }\n  }\n  matched.sort(function (a, b) {\n    return b.length - a.length\n  })\n  var matched_len = matched.length\n  for (var g = 0; g < matched_len; g++) {\n    string = string.replaceAll(matched[g].trim(), '')\n  }\n  return string.length / len\n}\n\nexport function checkPassword(string, cache, id) {\n  var getPoints = function (string) {\n    var length = -42.7 + 29.7 * Math.log(string.length);\n    var arr = string.split('')\n    var arr_len = arr.length\n    var randomness = 0\n    var n_arr = []\n    var json = {}\n    var t = []\n    for (var w = 0; w < arr_len; w++) {\n      n_arr.push({ c: arr[w], i: w, u: String(arr[w]).charCodeAt(0) })\n      json['u_' + String(arr[w]).charCodeAt(0)] = json.hasOwnProperty('u_' + String(arr[w]).charCodeAt(0)) ? json['u_' + String(arr[w]).charCodeAt(0)] + 1 : 1\n    }\n    n_arr.sort(function (a, b) {\n      return a.u - b.u\n    })\n\n    for (var w = 0; w < arr_len; w++) {\n      randomness += Math.abs(w - n_arr[w].i)\n    }\n    randomness = randomness / n_arr.length / (string.length / 2) * 100\n    var repeat = 0\n    var repeat_len = 0\n    for (var w in json) {\n      repeat += json[w]\n      repeat_len += 1\n    }\n    repeat = (1 - repeat / repeat_len / string.length) * 100\n\n    t.push(string.match(/[A-Z]*/gm).join('').length)\n    t.push(string.match(/[a-z]*/gm).join('').length)\n    t.push(string.match(/[0-9]*/gm).join('').length)\n    t.push(string.length - t[0] - t[1] - t[2])\n\n    var t_avg = string.length / 4\n    var t_s = 0\n    for (var w = 0; w < 4; w++) {\n      t_s += Math.pow(t[w] - t_avg, 2)\n    }\n    const ty: number = (1 - Math.min(Math.max(Math.sqrt(t_s / 4) / t_avg, 0), 1)) * 100\n\n    var commonWords = checkCommonWordPatterns(string) * 100\n    return [Math.min(Math.max(Math.floor((length * 3 + randomness * 1.5 + repeat * 2 + ty * 2 + commonWords * 2) / 10.5), 0), 100), Math.floor(length), Math.floor(randomness), Math.floor(repeat), Math.floor(ty), Math.floor(commonWords), t[0], t[1], t[2], t[3]]\n  }\n\n  var judgePoints = function (points) {\n    var phrase = ''\n    var r, g, b = 0\n    if (points >= 85) {\n      phrase = 'strong'\n      r = 52\n      g = 199\n      b = 89\n    }\n    if (points >= 60 && points < 85) {\n      phrase = 'average'\n      r = 242\n      g = 190\n      b = 0\n    }\n    if (points >= 45 && points < 60) {\n      phrase = 'fragile'\n      r = 255\n      g = 149\n      b = 0\n    }\n    if (points < 45) {\n      phrase = 'unsafe'\n      r = 255\n      g = 59\n      b = 48\n    }\n    return [phrase, r, g, b]\n  }\n\n  var getReport = function (length_points, randomness_points, repeat_points, complexity_points, uniqueness_points, n1, n2, n3, n4) {\n\n    var points_summary = 5\n    // Initialize a set to store used instructions\n    var used_instructions = new Set();\n    // Length Instructions\n    if (length_points <= 25 && !used_instructions.has(\"length_short\")) {\n      var Length_Instructions = \"The length of this password is too short. Suggest you make it long enough.\";\n      used_instructions.add(\"length_short\");\n    } else if (length_points >= 26 && length_points <= 50 && !used_instructions.has(\"length_not_long\")) {\n      var Length_Instructions = \"The length of this password isn't long enough. Suggest you make it longer.\";\n      used_instructions.add(\"length_not_long\");\n    } else if (length_points >= 51 && length_points <= 75 && !used_instructions.has(\"length_average\")) {\n      var Length_Instructions = \"The length of this password is average. Recommend you make it longer.\";\n      used_instructions.add(\"length_average\");\n    } else if (length_points >= 76 && !used_instructions.has(\"length_long_enough\")) {\n      var Length_Instructions = \"The length of this password is long enough, but please keep awareness of the security of your accounts.\";\n      used_instructions.add(\"length_long_enough\");\n      points_summary -= 1\n    }\n\n    // Randomness Instructions\n    if (randomness_points <= 25 && !used_instructions.has(\"randomness_neat\")) {\n      var Randomness_Instructions = \"The arrangement of characters in this password is too neat, so the password isn't random. Suggest you rearrange the characters.\";\n      used_instructions.add(\"randomness_neat\");\n    } else if (randomness_points >= 26 && randomness_points <= 50 && !used_instructions.has(\"randomness_not_messy\")) {\n      var Randomness_Instructions = \"The arrangement of characters in this password isn't messy enough, so the password isn't random. Suggest you rearrange the characters.\";\n      used_instructions.add(\"randomness_not_messy\");\n    } else if (randomness_points >= 51 && randomness_points <= 75 && !used_instructions.has(\"randomness_average\")) {\n      var Randomness_Instructions = \"The arrangement of characters in this password is randomly distributed on average. Recommend you rearrange the characters.\";\n      used_instructions.add(\"randomness_average\");\n    } else if (randomness_points >= 76 && !used_instructions.has(\"randomness_random\")) {\n      var Randomness_Instructions = \"The arrangement of characters in this password is entirely random, but please keep awareness of the security of your accounts.\";\n      used_instructions.add(\"randomness_random\");\n      points_summary -= 1\n    }\n\n    // Repeat Instructions\n    if (repeat_points <= 25 && !used_instructions.has(\"repeat_entirely\")) {\n      var Repeat_Instructions = \"In this password, the characters are entirely repeated, which can pose a danger to your account. Suggest you regenerate a new one.\";\n      used_instructions.add(\"repeat_entirely\");\n    } else if (repeat_points >= 26 && repeat_points <= 50 && !used_instructions.has(\"repeat_repeated\")) {\n      var Repeat_Instructions = \"In this password, the characters are repeated, which might cause potential dangers to your account. Suggest you regenerate a new one.\";\n      used_instructions.add(\"repeat_repeated\");\n    } else if (repeat_points >= 51 && repeat_points <= 75 && !used_instructions.has(\"repeat_slightly\")) {\n      var Repeat_Instructions = \"In this password, the characters are slightly repeated, which is not a strict problem, but still suggest you regenerate a new one.\";\n      used_instructions.add(\"repeat_slightly\");\n    } else if (repeat_points >= 76 && !used_instructions.has(\"repeat_hardly\")) {\n      var Repeat_Instructions = \"In this password, the characters are hardly repeated, but please keep awareness of the security of your accounts.\";\n      used_instructions.add(\"repeat_hardly\");\n      points_summary -= 1\n    }\n\n    // Complexity Instructions\n    if (complexity_points <= 25 && !used_instructions.has(\"complexity_not_complex\")) {\n      var Complexity_Instructions = `This password consists of ${n1} uppercases, ${n2} lowercases, ${n3} digits, and ${n4} other types of characters. The types of characters in this password aren't complex and rich enough. Suggest you regenerate a new password that includes all the types of characters.`;\n      used_instructions.add(\"complexity_not_complex\");\n    } else if (complexity_points >= 26 && complexity_points <= 50 && !used_instructions.has(\"complexity_not_complex_enough\")) {\n      var Complexity_Instructions = `This password consists of ${n1} uppercases, ${n2} lowercases, ${n3} digits, and ${n4} types of other characters. The types of characters in this password aren't complex and rich enough. Suggest you regenerate a new password that includes all the types of characters.`;\n      used_instructions.add(\"complexity_not_complex_enough\");\n    } else if (complexity_points >= 51 && complexity_points <= 75 && !used_instructions.has(\"complexity_not_complex_enough_2\")) {\n      var Complexity_Instructions = `This password consists of ${n1} uppercases, ${n2} lowercases, ${n3} digits, and ${n4} other types of characters. The types of characters in this password aren't complex and rich enough. Recommend you regenerate a new password that includes all the types of characters.`;\n      used_instructions.add(\"complexity_not_complex_enough_2\");\n    } else if (complexity_points >= 76 && !used_instructions.has(\"complexity_complex\")) {\n      var Complexity_Instructions = `This password consists of ${n1} uppercases, ${n2} lowercases, ${n3} digits, and ${n4} other types of characters. The types of characters in this password are complex and rich. But please keep awareness of the security of your accounts.`;\n      used_instructions.add(\"complexity_complex\");\n      points_summary -= 1\n    }\n    // Uniqueness Instructions\n    if (uniqueness_points <= 25 && !used_instructions.has(\"uniqueness_not_unique\")) {\n      var Uniqueness_Instructions = `This password includes many common words. Suggest you remove the words from this password to make it more secure.`\n      used_instructions.add(\"complexity_not_complex\");\n    } else if (uniqueness_points >= 26 && uniqueness_points <= 50 && !used_instructions.has(\"uniqueness_not_unique_enough\")) {\n      var Uniqueness_Instructions = `This password includes some common words. Suggest you remove the words from this password to make it more secure.`\n      used_instructions.add(\"complexity_not_complex_enough\");\n    } else if (uniqueness_points >= 51 && uniqueness_points <= 99 && !used_instructions.has(\"uniqueness_not_unique_enough_2\")) {\n      var Uniqueness_Instructions = `This password includes common words. Suggest you remove the words from this password to make it more secure.`\n      used_instructions.add(\"complexity_not_complex_enough_2\");\n    } else if (uniqueness_points >= 100 && !used_instructions.has(\"uniqueness_unique\")) {\n      var Uniqueness_Instructions = `This password doesn't include common words collected in our list. But please keep awareness of the security of your accounts.`\n      used_instructions.add(\"complexity_complex\");\n      points_summary -= 1\n    }\n\n    if (points_summary === 0) {\n      points_summary = 'no'\n    }\n\n    var report = `According to the points, this password has ${points_summary} problem${(points_summary > 1 ? 's' : '')}.\nAll you have to do is follow the instructions:\n1. ${Length_Instructions}\n2. ${Randomness_Instructions}\n3. ${Repeat_Instructions}\n4. ${Complexity_Instructions}\n5. ${Uniqueness_Instructions}`\n\n    return report\n  }\n\n  if (cache) {\n    var LS_key = `pwdgen2_saved_b_${id}`\n    var LS_cache_key = `pwdgen2_check_cache_b_${id}`\n    var nowtime = new Date().getTime()\n    if (LS.hasOwnProperty(LS_cache_key)) {\n      var cached_result_points = parseInt(String(LS.getItem(LS_cache_key)).split(':')[1])\n      var cached_result_time_stamp = parseInt(String(LS.getItem(LS_cache_key)).split(':')[0])\n      var ju = judgePoints(cached_result_points)\n      if ((nowtime - cached_result_time_stamp) < 43200000) {\n        return { 'points': cached_result_points, 'phrase': ju[0], 'color': { r: ju[1], g: ju[2], b: ju[3] }, 'details': null }\n      }\n      else {\n        LS.removeItem(LS_cache_key)\n      }\n    }\n  }\n  var points = getPoints(string)\n  var ju = judgePoints(points[0])\n  var ju_length = judgePoints(points[1])\n  var ju_randomness = judgePoints(points[2])\n  var ju_repeat = judgePoints(points[3])\n  var ju_complexity = judgePoints(points[4])\n  var ju_uniqueness = judgePoints(points[5])\n  if (cache) {\n    LS.setItem(LS_cache_key, nowtime + ':' + points[0])\n  }\n  return {\n    'points': points[0],\n    'phrase': ju[0],\n    'color':\n    {\n      r: ju[1],\n      g: ju[2],\n      b: ju[3]\n    },\n    'details': {\n      len: {\n        points: points[1],\n        color:\n          { r: ju_length[1], g: ju_length[2], b: ju_length[3] }\n      },\n      randomness: {\n        points: points[2],\n        color: {\n          r: ju_randomness[1],\n          g: ju_randomness[2],\n          b: ju_randomness[3]\n        }\n      },\n      repeat: {\n        points: points[3],\n        color: {\n          r: ju_repeat[1],\n          g: ju_repeat[2],\n          b: ju_repeat[3]\n        }\n      },\n      complexity: {\n        points: points[4],\n        color: {\n          r: ju_complexity[1],\n          g: ju_complexity[2],\n          b: ju_complexity[3]\n        }\n      },\n      uniqueness: {\n        points: points[5],\n        color: {\n          r: ju_uniqueness[1],\n          g: ju_uniqueness[2],\n          b: ju_uniqueness[3]\n        }\n      }\n      ,\n      report: getReport(points[1], points[2], points[3], points[4], points[5], points[6], points[7], points[8], points[9])\n    }\n  }\n}\n","import { LS, searchItemsbyname } from './storage'\nimport utilities from './utilities'\nvar _ = require('lodash');\n\nconst pwd_pattern_default: object = [\n  {\n    \"pattern_name\": \"Strong\",\n    \"pattern_icon\": \"key\",\n    \"id\": \"_strong\",\n    \"pattern\": [\n      {\n        \"type\": \"group\",\n        \"group\": [\n          {\n            \"type\": \"regex\",\n            \"regex\": \"/[A-Z]/g\",\n            \"quantity\": 32,\n            \"repeat\": true\n          },\n          {\n            \"type\": \"regex\",\n            \"regex\": \"/[a-z]/g\",\n            \"quantity\": 32,\n            \"repeat\": true\n          },\n          {\n            \"type\": \"regex\",\n            \"regex\": \"/[0-9]/g\",\n            \"quantity\": 32,\n            \"repeat\": true\n          },\n          {\n            \"type\": \"list\",\n            \"list\": [\n              \"-\",\n              \"!\",\n              \"$\",\n              \"%\",\n              \"^\",\n              \"&\",\n              \"*\",\n              \"(\",\n              \")\",\n              \"_\",\n              \"+\",\n              \"|\",\n              \"~\",\n              \"=\",\n              \"`\",\n              \"{\",\n              \"}\",\n              \"\\\\\",\n              \"[\",\n              \"]\",\n              \":\",\n              \",\",\n              \";\",\n              \"'\",\n              \"<\",\n              \">\",\n              \"?\",\n              \",\",\n              \".\",\n              \"/\"\n            ],\n            \"quantity\": 32,\n            \"repeat\": true\n          }\n        ],\n        \"actions\": [\n          \"shuffle\"\n        ]\n      }\n    ]\n  },\n  {\n    \"pattern_name\": \"Easy to read\",\n    \"pattern_icon\": \"visibility\",\n    \"id\": \"_strong\",\n    \"pattern\": [\n      {\n        \"type\": \"group\",\n        \"group\": [\n          {\n            \"type\": \"regex\",\n            \"regex\": \"/[A-HKMNP-Z0-9a-hkmnp-z]/g\",\n            \"quantity\": 8,\n            \"repeat\": true\n          }\n        ],\n        \"actions\": [\n          \"shuffle\"\n        ]\n      },\n      {\n        \"type\": \"string\",\n        \"string\": \"-\"\n      },\n      {\n        \"type\": \"group\",\n        \"group\": [\n          {\n            \"type\": \"regex\",\n            \"regex\": \"/[A-HKMNP-Z0-9a-hkmnp-z]/g\",\n            \"quantity\": 8,\n            \"repeat\": true\n          }\n        ],\n        \"actions\": [\n          \"shuffle\"\n        ]\n      },\n      {\n        \"type\": \"string\",\n        \"string\": \"-\"\n      },\n      {\n        \"type\": \"group\",\n        \"group\": [\n          {\n            \"type\": \"regex\",\n            \"regex\": \"/[A-HKMNP-Z0-9a-hkmnp-z]/g\",\n            \"quantity\": 8,\n            \"repeat\": true\n          }\n        ],\n        \"actions\": [\n          \"shuffle\"\n        ]\n      }\n    ]\n  }\n]\n\nfunction listPatterns() {\n  var list = searchItemsbyname('pwdgen2_pattern_b_')\n  var list_len = list.length\n  var result = []\n  for (var p = 0; p < list_len; p++) {\n    if (LS.hasOwnProperty(list[p])) {\n      result.push(JSON.parse(String(LS.getItem(list[p]))))\n    }\n  }\n  return result\n}\nconst pwd_pattern_custom: object = []\n\nconst getPatterns = function (): object {\n  fine_grained_password.pwd_pattern_custom = fine_grained_password.listPatterns()\n  return pwd_pattern_default.concat(fine_grained_password.pwd_pattern_custom)\n}\n\nfunction generate(options: object, mode: string): string | object {\n  const pattern: object = _.cloneDeep(options);\n  const original_pattern: object = _.cloneDeep(options)\n  /*\n   const check = fine_grained_password.checkPatternQualification({\n     'pattern_name': 'name',\n     'pattern_icon': 'icon',\n     'pattern': options\n   })\n   if (!check.result) {\n     return original_pattern.map(e => { ({ result: '', component: e }) })\n   }\n   */\n  if (mode === 'production') {\n    var d: string = \"\"\n  }\n  if (mode === 'editor') {\n    var d: Array = []\n  }\n\n  const get_chars_from_regex = function (regex) {\n    const input = String.fromCharCode(...Array.from({ length: Math.pow(2, 16) }, (_, i) => i));\n    const matches = String(input).match(regex);\n    const chars = matches ? matches.join('') : '';\n    return chars\n  }\n  const pattern_len = pattern.length\n  for (var e = 0; e < pattern_len; e++) {\n    var this_item = pattern[e]\n    var this_content = this_item[this_item['type']]\n    var result = ''\n    if (this_item['type'] === \"regex\") {\n      var this_content_matches = this_content.match(/^\\/(.*)\\/([a-z]*)$/i);\n      var string = ''\n      var chars = get_chars_from_regex(new RegExp(this_content_matches[1], this_content_matches[2])).split('')\n      for (var r = 0; r < this_item['quantity']; r++) {\n        var random_index = Math.round((chars.length - 1) * Math.random())\n        string += chars[random_index]\n        if (!this_item.repeat) {\n          chars.splice(random_index, 1)\n        }\n      }\n      result = String(string)\n    }\n    if (this_item['type'] === \"string\") {\n      result = String(this_content)\n    }\n    if (this_item['type'] === \"list\") {\n      for (var r = 0; r < this_item['quantity']; r++) {\n        var random_index = Math.round((this_content.length - 1) * Math.random())\n        result += this_content[random_index]\n        if (!this_item.repeat) {\n          this_content.splice(random_index, 1)\n        }\n      }\n    }\n    if (this_item['type'] === \"group\") {\n      result = fine_grained_password.generate(this_content, 'production')\n      if (this_item.hasOwnProperty('actions')) {\n        var actions = this_item['actions']\n        var actions_len = actions.length\n        for (var j = 0; j < actions_len; j++) {\n          if (actions[j] === 'shuffle') {\n            result = utilities.shuffleSelf(result.split(''), result.length).join('')\n            continue;\n          }\n        }\n      }\n    }\n    if (mode === 'production') {\n      d += result\n    }\n    if (mode === 'editor') {\n      d.push({ result: result, component: original_pattern[e] })\n    }\n  }\n  return d\n}\n\nfunction checkPatternQualification(pattern: object): object {\n  var json = _.cloneDeep(pattern)\n  var result = 1\n  var errors: Array = []\n  const omitobject = function (object: object): string {\n    var obj = _.cloneDeep(object)\n    if (typeof object === 'object' && !Array.isArray(object)) {\n      for (var w in obj) {\n        if (typeof obj[w] === 'object' && !Array.isArray(obj[w])) {\n          obj[w] = '{...}'\n        }\n        if (typeof obj[w] === 'object' && Array.isArray(obj[w])) {\n          obj[w] = '[...]'\n        }\n      }\n      return JSON.stringify(obj)\n    }\n  }\n  const check_hasOwnProperty = function (object: object, property: string): boolean {\n    if (typeof object === 'object') {\n      if (object.hasOwnProperty(property)) {\n        return 1\n      }\n      else {\n        errors.push(`The property \"${property}\" was not found in ${omitobject(object)}.`)\n        return 0\n      }\n    }\n    errors.push(`Cannot check the property \"${property}\" due to type error of ${String(object)}.`)\n    return 0\n  }\n  var check = function (object: object) {\n    var result = 1\n    result *= check_hasOwnProperty(object, 'type')\n    var type = object['type']\n    if (type === 'string' || type === 'regex' || type === 'list' || type === 'group') {\n      result *= check_hasOwnProperty(object, object['type'])\n    }\n    else {\n      errors.push(`The type \"${type}\" in ${omitobject(object)} was not supported at this time.`)\n      result *= 0\n    }\n    if (type === 'regex' || type === 'list') {\n      result *= check_hasOwnProperty(object, 'quantity')\n      result *= check_hasOwnProperty(object, 'repeat')\n      if (!(typeof object['quantity'] === 'number')) {\n        errors.push(`Type of the property \"quantity\" in ${omitobject(object)} is not number.`)\n        result *= 0\n      }\n      if (!(typeof object['repeat'] === 'boolean')) {\n        errors.push(`Type of the property \"repeat\" in ${omitobject(object)} is not boolean (true or false).`)\n        result *= 0\n      }\n    }\n    if (type === 'list') {\n      if (typeof object['list'] === 'object' && Array.isArray(object['list'])) {\n        var list = object['list']\n        var list_len = list.length\n        for (var e = 0; e < list_len; e++) {\n          if (!(typeof list[e] === 'string')) {\n            errors.push(`Type of the item ${e} in the list of ${omitobject(object)} is not string.`)\n            result *= 0\n          }\n        }\n      }\n      else {\n        errors.push('Cannot get item due to type error or property not existing.')\n        result *= 0\n      }\n    }\n    if (type === 'group') {\n      if (typeof object['actions'] === 'object' && Array.isArray(object['actions'])) {\n        var actions = object['actions']\n        var actions_len = actions.length\n        for (var e = 0; e < actions_len; e++) {\n          if (!(typeof actions[e] === 'string')) {\n            errors.push(`An item in actions must be string.`)\n            result *= 0\n          }\n          else {\n            if (!(actions[e] === 'shuffle')) {\n              errors.push(`Cannot use ${actions[e]} at this time due to not supportted value.`)\n              result *= 0\n            }\n          }\n        }\n      }\n      if (typeof object['group'] === 'object' && Array.isArray(object['group'])) {\n        var group = object['group']\n        var group_len = group.length\n        for (var e = 0; e < group_len; e++) {\n          result *= check(group[e])\n        }\n      }\n    }\n    if (type === \"regex\") {\n      if (typeof object['regex'] === 'string') {\n        if (!object['regex'].match(/^\\/(.*)\\/([a-z]*)$/i)) {\n          errors.push(`The regex in ${JSON.stringify(object)} is invalid on formats.`)\n          result *= 0\n        }\n      } else {\n        errors.push(`The type of the property \"regex\" in ${omitobject(object)} is not string.`)\n        result *= 0\n      }\n    }\n    if (result === 1) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  if (typeof json === 'object') {\n    result *= check_hasOwnProperty(json, 'pattern_name')\n    result *= check_hasOwnProperty(json, 'pattern_icon')\n    result *= check_hasOwnProperty(json, 'pattern')\n    if (!(typeof json['pattern_name'] === 'string')) {\n      errors.push(`Type of the property \"pattern_name\" in ${omitobject(json)} is not string.`)\n      result *= 0\n    }\n    if (!(typeof json['pattern_icon'] === 'string')) {\n      errors.push(`Type of the property \"pattern_icon\" in ${omitobject(json)} is not string.`)\n      result *= 0\n    }\n    if (typeof json['pattern'] === 'object' && Array.isArray(json['pattern'])) {\n      var pattern = json['pattern']\n      var pattern_len = pattern.length\n      for (var i = 0; i < pattern_len; i++) {\n        result *= check(pattern[i])\n      }\n    } else {\n      errors.push(`Type of the property \"pattern\" in ${omitobject(json)} is not array.`)\n      result *= 0\n    }\n  }\n  else {\n    errors.push(`Type of the thing you want to check is not object.`)\n    result *= 0\n  }\n  if (result === 1) {\n    result = true\n  }\n  else {\n    result = false\n  }\n  return { errors: errors, result: result }\n}\n\nwindow.fine_grained_password = {\n  pwd_pattern_custom,\n  generate,\n  listPatterns,\n  getPatterns,\n  checkPatternQualification\n}\n\nexport default window.fine_grained_password"],"names":["checkPassword","string","cache","id","judgePoints","points","r","g","phrase","b","concat","LS_cache_key","nowtime","Date","getTime","LS","hasOwnProperty","cached_result_points","parseInt","String","getItem","split","cached_result_time_stamp","ju","removeItem","length","Math","log","arr","arr_len","randomness","n_arr","json","t","w","push","c","i","u","charCodeAt","sort","a","abs","repeat","repeat_len","match","join","t_avg","t_s","pow","ty","min","max","sqrt","commonWords","words_list","loaded","getWordsList","len","toLowerCase","matched","substring","slice","indexOf","trim","matched_len","replaceAll","checkCommonWordPatterns","floor","getPoints","ju_length","ju_randomness","ju_repeat","ju_complexity","ju_uniqueness","setItem","color","complexity","uniqueness","report","length_points","randomness_points","repeat_points","complexity_points","uniqueness_points","n1","n2","n3","n4","points_summary","used_instructions","Set","has","Length_Instructions","add","Randomness_Instructions","Repeat_Instructions","Complexity_Instructions","Uniqueness_Instructions","getReport","_","require","pwd_pattern_default","window","fine_grained_password","pwd_pattern_custom","generate","options","mode","pattern","cloneDeep","original_pattern","d","regex","input","matches","pattern_len","e","this_item","this_content","result","this_content_matches","chars","RegExp","fromCharCode","apply","_toConsumableArray","Array","from","random_index","round","random","splice","actions","actions_len","j","utilities","shuffleSelf","component","listPatterns","list","searchItemsbyname","list_len","p","JSON","parse","getPatterns","checkPatternQualification","errors","omitobject","object","obj","_typeof","isArray","stringify","check_hasOwnProperty","property","check","type","group","group_len"],"sourceRoot":""}